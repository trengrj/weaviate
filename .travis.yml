addons:
  hosts:
    - db
before_script: ~
branches: 
  only: 
    - master
    - develop
dist: xenial
go: 
  - "1.11"
env:
  matrix:
  # Disable GraphQL tests and force using modules.
  - GO111MODULE=on GRAPHQL_TESTS=skip
  global:
  - secure: QH/qM6TuOZtNnNY8aKZPYB8uya3IYNVchvfyX28Tq5Kwwfj9CZX/m9Hac7lP1xOZyKdKMT4PAwVxUEhtQENJfymckQCFHVtoAU4vbVrUe8riAEBaWKNGM1rmPpU6gpdQ3oKDfBgSp5Sb4V+WhgCcN5u9xKC0ybURBVWUNhRyib8qEEe0w+CpJGaVdvtVFxDh2DuvJqZq+k416YIGY+83KhldQ/FKG0wRu9lGooOtcCIcSdJl+V8AaRByxsLa9JsSLoXsTHULdJfnP3g/tf4o36fA/4zbK+e8MLMGhfVmRQd5ow06E//H8Zct2OazTO8R+7f+01X5OcQAviXkyVTLcZ/xekoM/g+h9JWzF63uqAE1fq00hEs2tV4iT82xpyhevUTXGzs1460u+ESbHQJK0SjbpAQTRllKDrACgYQDKjE32EhT2TkEE5u+DZ/u19FHPsA6txjqFh0SXHKtpSk2hVdnpg7AawSY/QUc+sGp3enc6HAT/87cKaH9gSCxgI/KzUaXfEEfLp9hScckNpy9roaSvLmotGLxdpBnFpdmWaG56M/ohxTPhu5/FjIygIu+q2rDl2DwkPzeyFbsMjTAX++zBmpxW/D1GqVr+z5BxoTBJaJKO1K4vSay2q8GFdQeJXv3hIGFjt6qRhMWY83N9DZy4dOGTdE12nrQYA6oHqM=
  - secure: BOTUCkJrvKXMnCAfZN6x+gKgCI+TGnUEy5H0DxJ+NrxWsFwFXUiPAGR5kRMnRnh1uQ72xURwid/3lMd0ARaX7ZiG2ThoaEceHF0BVDRcD5sXBYtFOJP7OTHkbklxy/RyUny/GTmgfZDF4bKJGSDrUNbXlE8yeDF4kDWlThDuEaAYAefTmnFTaSJNYqyDyJaWfD04dgZ/6tNINHvTZjGBtIt0WnBp+LC9D0YGNuqSfHhkxmsVcPI+6lWynnWG2yU0L1Euw+OgqFV6qv8K3UHftnEoClVRmcKUry+FR0wW6Ah7WLxnH3Bkqwg4kqbxi8NdGdxM2TtRwkEn4vt1sxH02uaLZasdbRsRIcuOJ9Zq42c61GB9o3riNp7gTtA7nqjqHGDJVyYkDaNMKK+91FHefagtgdU/htrLPX5CemPH21AmIU51OfVTd2mAEan343a62gk3zVOKv6gHgfqtoxMWWquQUqXHyMdyPQ5EJFLsnTSpdSV0SkSZO9Um+sQ+BRC3t7D5QaP3NLN2X4nEOqAOdfI4JzwZX7sREUugI87zbrRAAXi+KoO+mfmcywL7hegKquctxv2TBt3U+pmT1ieZacArjnK4iTKK7NXPIUXXu9Fy3pnO3DSwtWu/RhA96UmuJZyca1eI1bo0zwPGt4bfLJGFd25/O1ttM54Z7MvBvG8=
  - secure: n4CXkJJlfkzXxBUW8lPd6nCxkRwt4+Z9q9c094OX6oJDnhBdItXqxTizFE1ClH+nG7v/KunBVK0DVbPuH19JQJ/OrcsNGJ2NBFHCW5gmAwexD7D1Zn9JFQolD711l7YufqPeC9275X8UMK/sbZK6KN8bmrAi8iBhE9U8vi9scsHZLUfe1G0YxUgjcPX8fgM8YMyJf6Y0wef0j7GyU2CK6qNtJ5QdNn7z3YzWTsQPGsy4CNCitATT69XqQhGM5rwsx08cTAxmRqHqo/j2bC4Ksy/bK+phLYqtuAT+rch1zNrEM2tAxLj/hFLQTb7Dzg1xEThhwkVmGpLQOG50HBMDW39jgirJlAfRK0LmHcu3VD/esPL6neyBUfNv/DxLNLP7K1dNGoe7wHG9hjSzzm3YmIb31J/v79hxoPGLYlLYtiF4oZOatWs2V9HD/WY2zus5y8wYMijSn7DCuUUM29pL/4nhhJipHIqD51VnzTkyVQeBCdAogskjKV6h06/SSxXJIydNeKJ/D+FUa2u8QvNRaNLqoi9f0LttqUXg5CVXB4yWQ/VLvf4Wqa2xbTXDiobv4RQ93urUMIKETvCADpqW3lSBPusOqYbp1oFal5zS6LYa6mWfHPQd4LIsvXi2+RqUa8D2EFb/jOh6ZsYwktt8fASjfKKrLnoJ309LRZwrrMU=
language: go
install:  
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - wget https://raw.githubusercontent.com/creativesoftwarefdn/semver-tool/master/src/semver
  - chmod +x semver
before_script:
  - sudo apt-get -qq -y update
  - sudo apt-get -qq -y install jq coreutils python3
  - |
    # Validate if the open-api schema needs to be bumped
    if [ $TRAVIS_PULL_REQUEST = "false" ]; then
      WEAVIATESCHEMAFILE=openapi-specs/schema.json
      PREVIOUSSEMVER=$(./semver compare $(git show --oneline HEAD:$WEAVIATESCHEMAFILE | jq -r ".info.version") $(git show --oneline HEAD~1:$WEAVIATESCHEMAFILE | jq -r ".info.version"))
      if [ "$PREVIOUSSEMVER" -eq 0 ]; then
        echo "Semver isn't bumped. Bumping as a PATCH"
        # Bump the version and add to schema.json
        NEWVERSIONJSON=$(jq -r '.info.version = $NEWVERSION' --arg NEWVERSION "$(./semver bump patch $(git show --oneline HEAD:$WEAVIATESCHEMAFILE | jq -r ".info.version"))" $WEAVIATESCHEMAFILE)
        echo $NEWVERSIONJSON > $WEAVIATESCHEMAFILE
        # build with new version
        ./tools/gen-code-from-swagger.sh
        # push back to Git
        git config credential.helper "store --file=.git/credentials"
        echo "https://${GH_TOKEN}:@github.com" > .git/credentials
        git add -A
        git commit -m "ğŸ¤– semver bump"
        git push origin HEAD:${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
        # exit 0 will trigger a new build
        travis_terminate 0
      elif [ "$PREVIOUSSEMVER" -eq -1 ]; then
        echo "Semver is behind the latest commit. This issue should be resolved and the version should be set to at least $(./semver bump patch $(git show --oneline HEAD~1:$SCHEMAFILE | jq -r ".info.version"))"
        travis_terminate 1
      fi
    fi
  # Verify that the code is properly formatted.
  - if [[ -n "$(gofmt -l .)" ]]; then echo "The following files were not formatted properly!"; gofmt -l .; exit 1; fi
  # Run Weaviate backed by JanusGraph
  - tools/test/run_ci_server.sh || travis_terminate 1
script: 
  # Verify dev setup is not broken
  #- ./tools/test/import_journey.sh || travis_terminate 1
  # Run all tests
  - |
    # Load the test schema in weaviate.
    go run ./tools/schema_loader -action-schema test/schema/test-action-schema.json -thing-schema test/schema/test-thing-schema.json
    # Load the fixtures for the GraphQL acceptance tests
    go run ./tools/schema_loader -action-schema test/acceptance/graphql_resolvers_local/fixtures/actions_schema.json -thing-schema test/acceptance/graphql_resolvers_local/fixtures/things_schema.json
    go run ./tools/fixture_importer/ -fixture-file test/acceptance/graphql_resolvers_local/fixtures/data.json
    # Prepare test reporter
    ./cc-test-reporter before-build
    # Run all tests
    for pkg in $(go list ./... | grep -v main); do
        if ! go test -race -v -coverprofile=$(echo $pkg | tr / -).cover $pkg; then
          echo "Test for $pkg failed" >&2
          travis_terminate 1
        fi
    done
    echo "mode: set" > c.out
    grep -h -v "^mode:" ./*.cover >> c.out
    rm -f *.cover
    ./cc-test-reporter after-build
services: 
  - docker
sudo: required