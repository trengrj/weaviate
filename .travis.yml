addons:
  hosts:
    - db
after_success:
  # Login to dockerhub
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - |
    # Build & Push docker images on dev and master
    if [ $TRAVIS_PULL_REQUEST = "false" ]; then
      if [ $TRAVIS_BRANCH = "master" ]; then
        # collect the latest version
        LATESTVERSION=$(git show --oneline HEAD:$WEAVIATESCHEMAFILE | jq -r ".info.version")
        # Build master
        DOCKERTARGET=weaviate_base     
      elif [ $TRAVIS_BRANCH = "develop" ]; then
        # collect the latest version
        LATESTVERSION=unstable
        # Build master
        DOCKERTARGET=development
      fi
      # Build & Push
      travis_wait 30 docker build -f "Dockerfile-prod" -t creativesoftwarefdn/weaviate:$LATESTVERSION --target $DOCKERTARGET .
      docker push creativesoftwarefdn/weaviate:unstable
    fi
before_script: ~
branches: 
  only: 
    - master
    - develop
dist: xenial
go: 
  - "1.11"
env:
  matrix:
  # Force using modules.
  - GO111MODULE=on
  global:
  # location of the open-api specs
  - WEAVIATESCHEMAFILE=openapi-specs/schema.json
  # how to autobump semver style
  - SEMVERBUMPTYPE=patch
  # secure values
  - secure: QH/qM6TuOZtNnNY8aKZPYB8uya3IYNVchvfyX28Tq5Kwwfj9CZX/m9Hac7lP1xOZyKdKMT4PAwVxUEhtQENJfymckQCFHVtoAU4vbVrUe8riAEBaWKNGM1rmPpU6gpdQ3oKDfBgSp5Sb4V+WhgCcN5u9xKC0ybURBVWUNhRyib8qEEe0w+CpJGaVdvtVFxDh2DuvJqZq+k416YIGY+83KhldQ/FKG0wRu9lGooOtcCIcSdJl+V8AaRByxsLa9JsSLoXsTHULdJfnP3g/tf4o36fA/4zbK+e8MLMGhfVmRQd5ow06E//H8Zct2OazTO8R+7f+01X5OcQAviXkyVTLcZ/xekoM/g+h9JWzF63uqAE1fq00hEs2tV4iT82xpyhevUTXGzs1460u+ESbHQJK0SjbpAQTRllKDrACgYQDKjE32EhT2TkEE5u+DZ/u19FHPsA6txjqFh0SXHKtpSk2hVdnpg7AawSY/QUc+sGp3enc6HAT/87cKaH9gSCxgI/KzUaXfEEfLp9hScckNpy9roaSvLmotGLxdpBnFpdmWaG56M/ohxTPhu5/FjIygIu+q2rDl2DwkPzeyFbsMjTAX++zBmpxW/D1GqVr+z5BxoTBJaJKO1K4vSay2q8GFdQeJXv3hIGFjt6qRhMWY83N9DZy4dOGTdE12nrQYA6oHqM=
  - secure: BOTUCkJrvKXMnCAfZN6x+gKgCI+TGnUEy5H0DxJ+NrxWsFwFXUiPAGR5kRMnRnh1uQ72xURwid/3lMd0ARaX7ZiG2ThoaEceHF0BVDRcD5sXBYtFOJP7OTHkbklxy/RyUny/GTmgfZDF4bKJGSDrUNbXlE8yeDF4kDWlThDuEaAYAefTmnFTaSJNYqyDyJaWfD04dgZ/6tNINHvTZjGBtIt0WnBp+LC9D0YGNuqSfHhkxmsVcPI+6lWynnWG2yU0L1Euw+OgqFV6qv8K3UHftnEoClVRmcKUry+FR0wW6Ah7WLxnH3Bkqwg4kqbxi8NdGdxM2TtRwkEn4vt1sxH02uaLZasdbRsRIcuOJ9Zq42c61GB9o3riNp7gTtA7nqjqHGDJVyYkDaNMKK+91FHefagtgdU/htrLPX5CemPH21AmIU51OfVTd2mAEan343a62gk3zVOKv6gHgfqtoxMWWquQUqXHyMdyPQ5EJFLsnTSpdSV0SkSZO9Um+sQ+BRC3t7D5QaP3NLN2X4nEOqAOdfI4JzwZX7sREUugI87zbrRAAXi+KoO+mfmcywL7hegKquctxv2TBt3U+pmT1ieZacArjnK4iTKK7NXPIUXXu9Fy3pnO3DSwtWu/RhA96UmuJZyca1eI1bo0zwPGt4bfLJGFd25/O1ttM54Z7MvBvG8=
  - secure: n4CXkJJlfkzXxBUW8lPd6nCxkRwt4+Z9q9c094OX6oJDnhBdItXqxTizFE1ClH+nG7v/KunBVK0DVbPuH19JQJ/OrcsNGJ2NBFHCW5gmAwexD7D1Zn9JFQolD711l7YufqPeC9275X8UMK/sbZK6KN8bmrAi8iBhE9U8vi9scsHZLUfe1G0YxUgjcPX8fgM8YMyJf6Y0wef0j7GyU2CK6qNtJ5QdNn7z3YzWTsQPGsy4CNCitATT69XqQhGM5rwsx08cTAxmRqHqo/j2bC4Ksy/bK+phLYqtuAT+rch1zNrEM2tAxLj/hFLQTb7Dzg1xEThhwkVmGpLQOG50HBMDW39jgirJlAfRK0LmHcu3VD/esPL6neyBUfNv/DxLNLP7K1dNGoe7wHG9hjSzzm3YmIb31J/v79hxoPGLYlLYtiF4oZOatWs2V9HD/WY2zus5y8wYMijSn7DCuUUM29pL/4nhhJipHIqD51VnzTkyVQeBCdAogskjKV6h06/SSxXJIydNeKJ/D+FUa2u8QvNRaNLqoi9f0LttqUXg5CVXB4yWQ/VLvf4Wqa2xbTXDiobv4RQ93urUMIKETvCADpqW3lSBPusOqYbp1oFal5zS6LYa6mWfHPQd4LIsvXi2+RqUa8D2EFb/jOh6ZsYwktt8fASjfKKrLnoJ309LRZwrrMU=
  - secure: md03rNDjZY1aJ0cYa9LeOVV4FA20p6UVNRmxB4PAKeY2Towb42FgpamaUckuS8g9xGC3mTlRJbNceGQzGvtbSfsgTPJx+oIEdkG6TSmVeWbzhNDd3m8FX/GfwmXX2NA0sVZi4Mr0aOvnhnhZrCQ5WInQR+DV1NdZbgo1UqXE0rXLpid8FuKuZ3wXFQa+ArnbqyNb0pBb8MtQSoj1x1kl9/zcdGINJVV0H+d8KPv4SpoB067em/XJIp8vZkb9Sf18N3B7IRLh84+t0Cg3OgZAqALEEe2GBO8vcQN9kRzN2dAvA5q+YdbTa8gS6nGIm2trGXXvWQ/WMVK7fkcVHGK9agFQCdV0Y6CtnThfKQcCSmcgTaj2NbYiJDZiUHXZWr8w2qTC7IvqOqkD87IczJZ2nPVMH1icqPNtaOLj+6FhUfZ0Md/whbb8r7O+vKp8sRwOVVk1y4O21ynAX8w3caWR1ruBF1agoUUWEHT3Wuz7klXL5ZPprHYTqtGbJmMNyT73OpTTqKavf1PAUMTX75YgHU1QOKYgTL5aaRxbYru+JuhWj4ML1H3m+75WOV0KIHiMjee2QAAgFPYWmxmFP3c1Q1fdydeHzCAr8K7Powqnj7j+SfDPxg3V1nc88ZDmHJgsTtGpENDdWVcuKfYWBQq5nqe0mzNix1yaOeLKxIrbRkg=
  - secure: ai7VYZ3hGQnSuo1cHvmq5ilmSdyXxF16ChUHzz3Rgr2JGanYP9s2qjXcsilz9kQDXWERglSF1BJ46tGsnGeIyInC9aw35cTNnnBkBlem1GwuEMW2NZXm1Jaa6ci6p0saMsLFF84s+IuABHajHLkEUhdcE5J+9SPZcJLi5OTJQEf12iGV34W55cgUHaJ2+pz1alfGrw+lnzfYUtJ2pjNBNWfPzldNuDpog2D1MR2H1S15r02dArN8e8MY6nooXqXoay46W0Vtsu7l05yKdd4sul1BqQRh8OYoFslT9C8wnzgPIClHhEPXz0YmU9g1K3BemGMaqFnM8LUGi5x1S4UTPHUCA78SF/elv+KSdSEKFzQpqsHGk/6u1KmVYhoMKZWYIu81zi6penXIHVXcBQtdgxUpRdsn0hvLtHCuZlEMggQ6OjvCsQNjTFF+doAeKxAv4u61mNPfG4U0OBiz5kZUcI37qmQcrhDby3Rq3Egx7/QNQQEiYZRfBva71/s2n2Dz49mP4VwbsctaFZJMp7mVyYmxO2TcYIeUkoPQHR6Yf71QZlY3TTs3PCckNBbiniSmF/ez2Ny0YRRdybNeC15g/NI3KjRl9IYWQTM7pe1GipEG4MeD1UdN0eTZJRXhPhXAG3cy2wZDI9vQiXXoOfRk28fLV+oRy8bjBR6j9JEc0iw=
language: go
install:  
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - wget https://raw.githubusercontent.com/creativesoftwarefdn/semver-tool/master/src/semver
  - chmod +x semver
before_script:
  - sudo apt-get -qq -y update
  - sudo apt-get -qq -y install jq coreutils python3
  - ./tools/semver_bump.sh || travis_terminate 1
  # Verify that the code is properly formatted.
  - if [[ -n "$(gofmt -l .)" ]]; then echo "The following files were not formatted properly!"; gofmt -l .; exit 1; fi
script: 
  # Verify dev setup is not broken
  #- ./tools/test/import_journey.sh || travis_terminate 1
  # Run all tests
  - ./cc-test-reporter before-build
  - ./test/acceptance/run.sh || travis_terminate 1
  - ./cc-test-reporter after-build
services: 
  - docker
sudo: required
