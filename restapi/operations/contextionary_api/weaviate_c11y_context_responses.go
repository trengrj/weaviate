/*                          _       _
 *__      _____  __ ___   ___  __ _| |_ ___
 *\ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
 * \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
 *  \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
 *
 * Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
 * LICENSE: https://github.com/creativesoftwarefdn/weaviate/blob/develop/LICENSE.md
 * DESIGN & CONCEPT: Bob van Luijt (@bobvanluijt)
 * CONTACT: hello@creativesoftwarefdn.org
 */ // Code generated by go-swagger; DO NOT EDIT.

package contextionary_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/creativesoftwarefdn/weaviate/models"
)

// WeaviateC11yContextOKCode is the HTTP code returned for type WeaviateC11yContextOK
const WeaviateC11yContextOKCode int = 200

/*WeaviateC11yContextOK Successful response.

swagger:response weaviateC11yContextOK
*/
type WeaviateC11yContextOK struct {

	/*
	  In: Body
	*/
	Payload *models.C11yContextResponse `json:"body,omitempty"`
}

// NewWeaviateC11yContextOK creates WeaviateC11yContextOK with default headers values
func NewWeaviateC11yContextOK() *WeaviateC11yContextOK {

	return &WeaviateC11yContextOK{}
}

// WithPayload adds the payload to the weaviate c11y context o k response
func (o *WeaviateC11yContextOK) WithPayload(payload *models.C11yContextResponse) *WeaviateC11yContextOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate c11y context o k response
func (o *WeaviateC11yContextOK) SetPayload(payload *models.C11yContextResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateC11yContextOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WeaviateC11yContextBadRequestCode is the HTTP code returned for type WeaviateC11yContextBadRequest
const WeaviateC11yContextBadRequestCode int = 400

/*WeaviateC11yContextBadRequest Incorrect request

swagger:response weaviateC11yContextBadRequest
*/
type WeaviateC11yContextBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewWeaviateC11yContextBadRequest creates WeaviateC11yContextBadRequest with default headers values
func NewWeaviateC11yContextBadRequest() *WeaviateC11yContextBadRequest {

	return &WeaviateC11yContextBadRequest{}
}

// WithPayload adds the payload to the weaviate c11y context bad request response
func (o *WeaviateC11yContextBadRequest) WithPayload(payload *models.ErrorResponse) *WeaviateC11yContextBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate c11y context bad request response
func (o *WeaviateC11yContextBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateC11yContextBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WeaviateC11yContextUnauthorizedCode is the HTTP code returned for type WeaviateC11yContextUnauthorized
const WeaviateC11yContextUnauthorizedCode int = 401

/*WeaviateC11yContextUnauthorized Unauthorized or invalid credentials.

swagger:response weaviateC11yContextUnauthorized
*/
type WeaviateC11yContextUnauthorized struct {
}

// NewWeaviateC11yContextUnauthorized creates WeaviateC11yContextUnauthorized with default headers values
func NewWeaviateC11yContextUnauthorized() *WeaviateC11yContextUnauthorized {

	return &WeaviateC11yContextUnauthorized{}
}

// WriteResponse to the client
func (o *WeaviateC11yContextUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// WeaviateC11yContextForbiddenCode is the HTTP code returned for type WeaviateC11yContextForbidden
const WeaviateC11yContextForbiddenCode int = 403

/*WeaviateC11yContextForbidden Insufficient permissions.

swagger:response weaviateC11yContextForbidden
*/
type WeaviateC11yContextForbidden struct {
}

// NewWeaviateC11yContextForbidden creates WeaviateC11yContextForbidden with default headers values
func NewWeaviateC11yContextForbidden() *WeaviateC11yContextForbidden {

	return &WeaviateC11yContextForbidden{}
}

// WriteResponse to the client
func (o *WeaviateC11yContextForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// WeaviateC11yContextInternalServerErrorCode is the HTTP code returned for type WeaviateC11yContextInternalServerError
const WeaviateC11yContextInternalServerErrorCode int = 500

/*WeaviateC11yContextInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response weaviateC11yContextInternalServerError
*/
type WeaviateC11yContextInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewWeaviateC11yContextInternalServerError creates WeaviateC11yContextInternalServerError with default headers values
func NewWeaviateC11yContextInternalServerError() *WeaviateC11yContextInternalServerError {

	return &WeaviateC11yContextInternalServerError{}
}

// WithPayload adds the payload to the weaviate c11y context internal server error response
func (o *WeaviateC11yContextInternalServerError) WithPayload(payload *models.ErrorResponse) *WeaviateC11yContextInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate c11y context internal server error response
func (o *WeaviateC11yContextInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateC11yContextInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WeaviateC11yContextNotImplementedCode is the HTTP code returned for type WeaviateC11yContextNotImplemented
const WeaviateC11yContextNotImplementedCode int = 501

/*WeaviateC11yContextNotImplemented Not (yet) implemented.

swagger:response weaviateC11yContextNotImplemented
*/
type WeaviateC11yContextNotImplemented struct {
}

// NewWeaviateC11yContextNotImplemented creates WeaviateC11yContextNotImplemented with default headers values
func NewWeaviateC11yContextNotImplemented() *WeaviateC11yContextNotImplemented {

	return &WeaviateC11yContextNotImplemented{}
}

// WriteResponse to the client
func (o *WeaviateC11yContextNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(501)
}
