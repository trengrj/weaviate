/*                          _       _
 *__      _____  __ ___   ___  __ _| |_ ___
 *\ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
 * \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
 *  \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
 *
 * Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
 * LICENSE: https://github.com/creativesoftwarefdn/weaviate/blob/develop/LICENSE.md
 * DESIGN & CONCEPT: Bob van Luijt (@bobvanluijt)
 * CONTACT: hello@creativesoftwarefdn.org
 */ // Code generated by go-swagger; DO NOT EDIT.

package p2_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// WeaviateP2pHealthOKCode is the HTTP code returned for type WeaviateP2pHealthOK
const WeaviateP2pHealthOKCode int = 200

/*WeaviateP2pHealthOK Alive and kicking!

swagger:response weaviateP2pHealthOK
*/
type WeaviateP2pHealthOK struct {
}

// NewWeaviateP2pHealthOK creates WeaviateP2pHealthOK with default headers values
func NewWeaviateP2pHealthOK() *WeaviateP2pHealthOK {

	return &WeaviateP2pHealthOK{}
}

// WriteResponse to the client
func (o *WeaviateP2pHealthOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// WeaviateP2pHealthInternalServerErrorCode is the HTTP code returned for type WeaviateP2pHealthInternalServerError
const WeaviateP2pHealthInternalServerErrorCode int = 500

/*WeaviateP2pHealthInternalServerError Not healthy (yet).

swagger:response weaviateP2pHealthInternalServerError
*/
type WeaviateP2pHealthInternalServerError struct {
}

// NewWeaviateP2pHealthInternalServerError creates WeaviateP2pHealthInternalServerError with default headers values
func NewWeaviateP2pHealthInternalServerError() *WeaviateP2pHealthInternalServerError {

	return &WeaviateP2pHealthInternalServerError{}
}

// WriteResponse to the client
func (o *WeaviateP2pHealthInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
