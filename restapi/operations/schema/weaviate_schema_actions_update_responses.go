/*                          _       _
 *__      _____  __ ___   ___  __ _| |_ ___
 *\ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
 * \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
 *  \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
 *
 * Copyright Â© 2016 - 2018 Weaviate. All rights reserved.
 * LICENSE: https://github.com/creativesoftwarefdn/weaviate/blob/develop/LICENSE.md
 * AUTHOR: Bob van Luijt (bob@kub.design)
 * See www.creativesoftwarefdn.org for details
 * Contact: @CreativeSofwFdn / bob@kub.design
 */
// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/creativesoftwarefdn/weaviate/models"
)

// WeaviateSchemaActionsUpdateOKCode is the HTTP code returned for type WeaviateSchemaActionsUpdateOK
const WeaviateSchemaActionsUpdateOKCode int = 200

/*WeaviateSchemaActionsUpdateOK Changes applied.

swagger:response weaviateSchemaActionsUpdateOK
*/
type WeaviateSchemaActionsUpdateOK struct {
}

// NewWeaviateSchemaActionsUpdateOK creates WeaviateSchemaActionsUpdateOK with default headers values
func NewWeaviateSchemaActionsUpdateOK() *WeaviateSchemaActionsUpdateOK {

	return &WeaviateSchemaActionsUpdateOK{}
}

// WriteResponse to the client
func (o *WeaviateSchemaActionsUpdateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// WeaviateSchemaActionsUpdateUnauthorizedCode is the HTTP code returned for type WeaviateSchemaActionsUpdateUnauthorized
const WeaviateSchemaActionsUpdateUnauthorizedCode int = 401

/*WeaviateSchemaActionsUpdateUnauthorized Unauthorized or invalid credentials.

swagger:response weaviateSchemaActionsUpdateUnauthorized
*/
type WeaviateSchemaActionsUpdateUnauthorized struct {
}

// NewWeaviateSchemaActionsUpdateUnauthorized creates WeaviateSchemaActionsUpdateUnauthorized with default headers values
func NewWeaviateSchemaActionsUpdateUnauthorized() *WeaviateSchemaActionsUpdateUnauthorized {

	return &WeaviateSchemaActionsUpdateUnauthorized{}
}

// WriteResponse to the client
func (o *WeaviateSchemaActionsUpdateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// WeaviateSchemaActionsUpdateForbiddenCode is the HTTP code returned for type WeaviateSchemaActionsUpdateForbidden
const WeaviateSchemaActionsUpdateForbiddenCode int = 403

/*WeaviateSchemaActionsUpdateForbidden Could not find the Action class.

swagger:response weaviateSchemaActionsUpdateForbidden
*/
type WeaviateSchemaActionsUpdateForbidden struct {
}

// NewWeaviateSchemaActionsUpdateForbidden creates WeaviateSchemaActionsUpdateForbidden with default headers values
func NewWeaviateSchemaActionsUpdateForbidden() *WeaviateSchemaActionsUpdateForbidden {

	return &WeaviateSchemaActionsUpdateForbidden{}
}

// WriteResponse to the client
func (o *WeaviateSchemaActionsUpdateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// WeaviateSchemaActionsUpdateUnprocessableEntityCode is the HTTP code returned for type WeaviateSchemaActionsUpdateUnprocessableEntity
const WeaviateSchemaActionsUpdateUnprocessableEntityCode int = 422

/*WeaviateSchemaActionsUpdateUnprocessableEntity Invalid update.

swagger:response weaviateSchemaActionsUpdateUnprocessableEntity
*/
type WeaviateSchemaActionsUpdateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewWeaviateSchemaActionsUpdateUnprocessableEntity creates WeaviateSchemaActionsUpdateUnprocessableEntity with default headers values
func NewWeaviateSchemaActionsUpdateUnprocessableEntity() *WeaviateSchemaActionsUpdateUnprocessableEntity {

	return &WeaviateSchemaActionsUpdateUnprocessableEntity{}
}

// WithPayload adds the payload to the weaviate schema actions update unprocessable entity response
func (o *WeaviateSchemaActionsUpdateUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *WeaviateSchemaActionsUpdateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate schema actions update unprocessable entity response
func (o *WeaviateSchemaActionsUpdateUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateSchemaActionsUpdateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WeaviateSchemaActionsUpdateInternalServerErrorCode is the HTTP code returned for type WeaviateSchemaActionsUpdateInternalServerError
const WeaviateSchemaActionsUpdateInternalServerErrorCode int = 500

/*WeaviateSchemaActionsUpdateInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response weaviateSchemaActionsUpdateInternalServerError
*/
type WeaviateSchemaActionsUpdateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewWeaviateSchemaActionsUpdateInternalServerError creates WeaviateSchemaActionsUpdateInternalServerError with default headers values
func NewWeaviateSchemaActionsUpdateInternalServerError() *WeaviateSchemaActionsUpdateInternalServerError {

	return &WeaviateSchemaActionsUpdateInternalServerError{}
}

// WithPayload adds the payload to the weaviate schema actions update internal server error response
func (o *WeaviateSchemaActionsUpdateInternalServerError) WithPayload(payload *models.ErrorResponse) *WeaviateSchemaActionsUpdateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate schema actions update internal server error response
func (o *WeaviateSchemaActionsUpdateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateSchemaActionsUpdateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
