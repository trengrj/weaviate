version: '3.4'
services:
  weaviate:
    image: weaviate/test-server
    build:
      context: .
      dockerfile: Dockerfile
      target: weaviate
    depends_on:
      - janus
      - genesis_fake
      - etcd
    restart: on-failure:0
    ports:
     - "8080:8080"
    environment:
      DEVELOPMENT_UI: "on"
      LOG_LEVEL: "debug"
  contextionary:
    image: semitechnologies/contextionary:en0.8.0-v0.3.0-minimal
    ports:
      - "9999:9999"
    environment:
      SCHEMA_PROVIDER_URL: etcd:2379
      OCCURRENCE_WEIGHT_LINEAR_FACTOR: 0.75
  genesis_fake:
    build:
      context: .
      dockerfile: Dockerfile
      target: genesis_fake
    restart: on-failure:0
    ports:
      - "8090:8090"
    environment:
      REMOTE_PEER_NAME: RemoteWeaviateForAcceptanceTest
      REMOTE_PEER_URI: http://remote_weaviate_fake:8081
      LOCAL_PEER_URI: http://weaviate:8080
      ACCEPTANCE_TEST: "on"
  telemetry_mock_api: # used for telemetry logging acceptance testing
    build:
      context: .
      dockerfile: Dockerfile
      target: telemetry_mock_api
    restart: on-failure:0
    ports:
      - "8087:8087"
  remote_weaviate_fake: # used for testing the Network.Get functionality
    build:
      context: .
      dockerfile: Dockerfile
      target: remote_weaviate_fake
    restart: on-failure:0
    ports:
      - "8081:8081"
  remote_weaviate_fakes_with_test_schema: # used for comparing the remote schema against the prototype
    build:
      context: ./tools/remote_weaviate_fake_with_test_schema/
      dockerfile: Dockerfile
    restart: on-failure:0
    ports:
      - "8082:8082"
  janus:
    image: semitechnologies/janusgraph-docker:0.3.1
    depends_on:
      - db
      - index
    ports:
     - "8182:8182"
     - "8184:8184"
    environment:
     - DEV_MODE=true
    volumes:
      - ./adapters/connectors/janusgraph/janusgraph.properties:/janusgraph-config/janusgraph.properties
      - ./adapters/connectors/janusgraph/gremlin-server.yaml:/janusgraph-config/gremlin-server.yaml
  db:
    image: scylladb/scylla:2.0.1
    ports:
     # http://docs.scylladb.com/kb/posix/
     # REST API
     - "10000:10000"
     # CQL ports (native_transport_port)
     - "9042:9042"
     # Thrift (rpc_port)
     - "9160:9160"
     # Internode
     - "7000:7000"
     - "7001:7001"
     # JMX
     - "7199:7199"
     # Prometheus monitoring
     - "9180:9180"
     - "9100:9100"
    volumes:
     - ./data/scylla/data:/var/lib/scylla
  index:
    image: elasticsearch:5
    ports:
     - "9200:9200"
     - "9300:9300"
    environment:
     - ES_JAVA_OPTS=-Xms500m -Xmx500m
    volumes:
     - ./data/elasticsearch/data:/usr/share/elasticsearch/data
  genesis: # an actual genesis - not used in the weaviate tests, but used to test the genesis itself
    build:
      context: .
      dockerfile: Dockerfile
      target: genesis
    restart: on-failure:0
    ports:
      - "8111:8111"
    command:
      - "--scheme=http"
      - "--host=0.0.0.0"
      - "--port=8111"
  etcd:
    image: gcr.io/etcd-development/etcd:v3.3.8
    ports:
      - "2379:2379"
    entrypoint: /usr/local/bin/etcd
    command: 
      - "--name"
      - "s1"
      - "--data-dir"
      - "/etcd-data"
      - "--listen-client-urls"
      - "http://0.0.0.0:2379"
      - "--advertise-client-urls"
      - "http://0.0.0.0:2379"
      - "--listen-peer-urls"
      - "http://0.0.0.0:2380"
      - "--initial-advertise-peer-urls"
      - "http://0.0.0.0:2380"
      - "--initial-cluster"
      - "s1=http://0.0.0.0:2380"
      - "--initial-cluster-token"
      - "tkn"
      - "--initial-cluster-state"
      - "new"
  # esvector:
  #   image: semitechnologies/elasticsearch-vector:5.6.0-experimental
  #   environment:
  #     xpack.security.enabled: "false"
  #     ES_JAVA_OPTS: -Xms500m -Xmx500m
  #   ports: 
  #     - "9201:9200"
  #     - "9301:9300"
