/*                          _       _
 *__      _____  __ ___   ___  __ _| |_ ___
 *\ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
 * \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
 *  \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
 *
 * Copyright Â© 2016 Weaviate. All rights reserved.
 * LICENSE: https://github.com/weaviate/weaviate/blob/master/LICENSE
 * AUTHOR: Bob van Luijt (bob@weaviate.com)
 * See www.weaviate.com for details
 * Contact: @weaviate_iot / yourfriends@weaviate.com
 */
   

package models

// This file was generated by the swagger tool.
 

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ActionCreate action create
// swagger:model ActionCreate
type ActionCreate struct {

	// Available context. For now only schema.org
	AtContext string `json:"@context,omitempty"`

	// schema
	Schema Schema `json:"schema,omitempty"`
}

// Validate validates this action create
func (m *ActionCreate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAtContext(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var actionCreateTypeAtContextPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["http://schema.org"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		actionCreateTypeAtContextPropEnum = append(actionCreateTypeAtContextPropEnum, v)
	}
}

const (
	// ActionCreateAtContextHTTPSchemaOrg captures enum value "http://schema.org"
	ActionCreateAtContextHTTPSchemaOrg string = "http://schema.org"
)

// prop value enum
func (m *ActionCreate) validateAtContextEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, actionCreateTypeAtContextPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ActionCreate) validateAtContext(formats strfmt.Registry) error {

	if swag.IsZero(m.AtContext) { // not required
		return nil
	}

	// value enum
	if err := m.validateAtContextEnum("@context", "body", m.AtContext); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ActionCreate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActionCreate) UnmarshalBinary(b []byte) error {
	var res ActionCreate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
