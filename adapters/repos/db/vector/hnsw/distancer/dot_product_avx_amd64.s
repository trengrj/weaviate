// +build !noasm
// Generated by PeachPy 0.2.0 from dot_product_avx.py


// func DotProductAVX(x *float32, y *float32, length *uint) float32
TEXT Â·DotProductAVX(SB),4,$0-28
	MOVQ x+0(FP), AX
	MOVQ y+8(FP), BX
	MOVQ length+16(FP), CX
	BYTE $0xC5; BYTE $0xFC; BYTE $0x57; BYTE $0xC0 // VXORPS ymm0, ymm0, ymm0
	BYTE $0xC5; BYTE $0xF4; BYTE $0x57; BYTE $0xC9 // VXORPS ymm1, ymm1, ymm1
	BYTE $0xC5; BYTE $0xEC; BYTE $0x57; BYTE $0xD2 // VXORPS ymm2, ymm2, ymm2
	BYTE $0xC5; BYTE $0xE4; BYTE $0x57; BYTE $0xDB // VXORPS ymm3, ymm3, ymm3
	JCS vector_loop_end
vector_loop_begin:
		BYTE $0xC5; BYTE $0xFC; BYTE $0x10; BYTE $0x20 // VMOVUPS ymm4, [rax]
		BYTE $0xC5; BYTE $0xFC; BYTE $0x10; BYTE $0x2B // VMOVUPS ymm5, [rbx]
		BYTE $0xC4; BYTE $0xE2; BYTE $0x5D; BYTE $0xB8; BYTE $0xC5 // VFMADD231PS ymm0, ymm4, ymm5
		ADDQ $32, AX
		ADDQ $32, BX
		BYTE $0xC5; BYTE $0xFC; BYTE $0x10; BYTE $0x20 // VMOVUPS ymm4, [rax]
		BYTE $0xC5; BYTE $0xFC; BYTE $0x10; BYTE $0x2B // VMOVUPS ymm5, [rbx]
		BYTE $0xC4; BYTE $0xE2; BYTE $0x5D; BYTE $0xB8; BYTE $0xCD // VFMADD231PS ymm1, ymm4, ymm5
		ADDQ $32, AX
		ADDQ $32, BX
		BYTE $0xC5; BYTE $0xFC; BYTE $0x10; BYTE $0x20 // VMOVUPS ymm4, [rax]
		BYTE $0xC5; BYTE $0xFC; BYTE $0x10; BYTE $0x2B // VMOVUPS ymm5, [rbx]
		BYTE $0xC4; BYTE $0xE2; BYTE $0x5D; BYTE $0xB8; BYTE $0xD5 // VFMADD231PS ymm2, ymm4, ymm5
		ADDQ $32, AX
		ADDQ $32, BX
		BYTE $0xC5; BYTE $0xFC; BYTE $0x10; BYTE $0x20 // VMOVUPS ymm4, [rax]
		BYTE $0xC5; BYTE $0xFC; BYTE $0x10; BYTE $0x2B // VMOVUPS ymm5, [rbx]
		BYTE $0xC4; BYTE $0xE2; BYTE $0x5D; BYTE $0xB8; BYTE $0xDD // VFMADD231PS ymm3, ymm4, ymm5
		ADDQ $32, AX
		ADDQ $32, BX
		SUBB $32, 0(CX)
		JCC vector_loop_begin
vector_loop_end:
	BYTE $0xC5; BYTE $0xFC; BYTE $0x58; BYTE $0xC1 // VADDPS ymm0, ymm0, ymm1
	BYTE $0xC5; BYTE $0xEC; BYTE $0x58; BYTE $0xD3 // VADDPS ymm2, ymm2, ymm3
	BYTE $0xC5; BYTE $0xFC; BYTE $0x58; BYTE $0xC2 // VADDPS ymm0, ymm0, ymm2
	BYTE $0xC5; BYTE $0xFF; BYTE $0x7C; BYTE $0xC0 // VHADDPS ymm0, ymm0, ymm0
	BYTE $0xC5; BYTE $0xFF; BYTE $0x7C; BYTE $0xC0 // VHADDPS ymm0, ymm0, ymm0
	BYTE $0xC4; BYTE $0xE3; BYTE $0x7D; BYTE $0x19; BYTE $0xC1; BYTE $0x01 // VEXTRACTF128 xmm1, ymm0, 1
	BYTE $0xC5; BYTE $0xF8; BYTE $0x58; BYTE $0xC1 // VADDPS xmm0, xmm0, xmm1
	MOVSS X0, ret+24(FP)
	BYTE $0xC5; BYTE $0xF8; BYTE $0x77 // VZEROUPPER
	RET
