//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
// 
//  Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
//  LICENSE WEAVIATE OPEN SOURCE: https://www.semi.technology/playbook/playbook/contract-weaviate-OSS.html
//  LICENSE WEAVIATE ENTERPRISE: https://www.semi.technology/playbook/contract-weaviate-enterprise.html
//  CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package things

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/semi-technologies/weaviate/entities/models"
)

// WeaviateThingsCreateOKCode is the HTTP code returned for type WeaviateThingsCreateOK
const WeaviateThingsCreateOKCode int = 200

/*WeaviateThingsCreateOK Thing created.

swagger:response weaviateThingsCreateOK
*/
type WeaviateThingsCreateOK struct {

	/*
	  In: Body
	*/
	Payload *models.Thing `json:"body,omitempty"`
}

// NewWeaviateThingsCreateOK creates WeaviateThingsCreateOK with default headers values
func NewWeaviateThingsCreateOK() *WeaviateThingsCreateOK {

	return &WeaviateThingsCreateOK{}
}

// WithPayload adds the payload to the weaviate things create o k response
func (o *WeaviateThingsCreateOK) WithPayload(payload *models.Thing) *WeaviateThingsCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate things create o k response
func (o *WeaviateThingsCreateOK) SetPayload(payload *models.Thing) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateThingsCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WeaviateThingsCreateUnauthorizedCode is the HTTP code returned for type WeaviateThingsCreateUnauthorized
const WeaviateThingsCreateUnauthorizedCode int = 401

/*WeaviateThingsCreateUnauthorized Unauthorized or invalid credentials.

swagger:response weaviateThingsCreateUnauthorized
*/
type WeaviateThingsCreateUnauthorized struct {
}

// NewWeaviateThingsCreateUnauthorized creates WeaviateThingsCreateUnauthorized with default headers values
func NewWeaviateThingsCreateUnauthorized() *WeaviateThingsCreateUnauthorized {

	return &WeaviateThingsCreateUnauthorized{}
}

// WriteResponse to the client
func (o *WeaviateThingsCreateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// WeaviateThingsCreateForbiddenCode is the HTTP code returned for type WeaviateThingsCreateForbidden
const WeaviateThingsCreateForbiddenCode int = 403

/*WeaviateThingsCreateForbidden Forbidden

swagger:response weaviateThingsCreateForbidden
*/
type WeaviateThingsCreateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewWeaviateThingsCreateForbidden creates WeaviateThingsCreateForbidden with default headers values
func NewWeaviateThingsCreateForbidden() *WeaviateThingsCreateForbidden {

	return &WeaviateThingsCreateForbidden{}
}

// WithPayload adds the payload to the weaviate things create forbidden response
func (o *WeaviateThingsCreateForbidden) WithPayload(payload *models.ErrorResponse) *WeaviateThingsCreateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate things create forbidden response
func (o *WeaviateThingsCreateForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateThingsCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WeaviateThingsCreateUnprocessableEntityCode is the HTTP code returned for type WeaviateThingsCreateUnprocessableEntity
const WeaviateThingsCreateUnprocessableEntityCode int = 422

/*WeaviateThingsCreateUnprocessableEntity Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?

swagger:response weaviateThingsCreateUnprocessableEntity
*/
type WeaviateThingsCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewWeaviateThingsCreateUnprocessableEntity creates WeaviateThingsCreateUnprocessableEntity with default headers values
func NewWeaviateThingsCreateUnprocessableEntity() *WeaviateThingsCreateUnprocessableEntity {

	return &WeaviateThingsCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the weaviate things create unprocessable entity response
func (o *WeaviateThingsCreateUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *WeaviateThingsCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate things create unprocessable entity response
func (o *WeaviateThingsCreateUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateThingsCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WeaviateThingsCreateInternalServerErrorCode is the HTTP code returned for type WeaviateThingsCreateInternalServerError
const WeaviateThingsCreateInternalServerErrorCode int = 500

/*WeaviateThingsCreateInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response weaviateThingsCreateInternalServerError
*/
type WeaviateThingsCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewWeaviateThingsCreateInternalServerError creates WeaviateThingsCreateInternalServerError with default headers values
func NewWeaviateThingsCreateInternalServerError() *WeaviateThingsCreateInternalServerError {

	return &WeaviateThingsCreateInternalServerError{}
}

// WithPayload adds the payload to the weaviate things create internal server error response
func (o *WeaviateThingsCreateInternalServerError) WithPayload(payload *models.ErrorResponse) *WeaviateThingsCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate things create internal server error response
func (o *WeaviateThingsCreateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateThingsCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
