/*                          _       _
 *__      _____  __ ___   ___  __ _| |_ ___
 *\ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
 * \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
 *  \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
 *
 * Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
 * LICENSE WEAVIATE OPEN SOURCE: https://www.semi.technology/playbook/playbook/contract-weaviate-OSS.html
 * LICENSE WEAVIATE ENTERPRISE: https://www.semi.technology/playbook/contract-weaviate-enterprise.html
 * CONCEPT: Bob van Luijt (@bobvanluijt)
 * CONTACT: hello@semi.technology
 */ // Code generated by go-swagger; DO NOT EDIT.

package things

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/semi-technologies/weaviate/entities/models"
)

// WeaviateThingsListOKCode is the HTTP code returned for type WeaviateThingsListOK
const WeaviateThingsListOKCode int = 200

/*WeaviateThingsListOK Successful response.

swagger:response weaviateThingsListOK
*/
type WeaviateThingsListOK struct {

	/*
	  In: Body
	*/
	Payload *models.ThingsListResponse `json:"body,omitempty"`
}

// NewWeaviateThingsListOK creates WeaviateThingsListOK with default headers values
func NewWeaviateThingsListOK() *WeaviateThingsListOK {

	return &WeaviateThingsListOK{}
}

// WithPayload adds the payload to the weaviate things list o k response
func (o *WeaviateThingsListOK) WithPayload(payload *models.ThingsListResponse) *WeaviateThingsListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate things list o k response
func (o *WeaviateThingsListOK) SetPayload(payload *models.ThingsListResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateThingsListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WeaviateThingsListUnauthorizedCode is the HTTP code returned for type WeaviateThingsListUnauthorized
const WeaviateThingsListUnauthorizedCode int = 401

/*WeaviateThingsListUnauthorized Unauthorized or invalid credentials.

swagger:response weaviateThingsListUnauthorized
*/
type WeaviateThingsListUnauthorized struct {
}

// NewWeaviateThingsListUnauthorized creates WeaviateThingsListUnauthorized with default headers values
func NewWeaviateThingsListUnauthorized() *WeaviateThingsListUnauthorized {

	return &WeaviateThingsListUnauthorized{}
}

// WriteResponse to the client
func (o *WeaviateThingsListUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// WeaviateThingsListForbiddenCode is the HTTP code returned for type WeaviateThingsListForbidden
const WeaviateThingsListForbiddenCode int = 403

/*WeaviateThingsListForbidden Forbidden

swagger:response weaviateThingsListForbidden
*/
type WeaviateThingsListForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewWeaviateThingsListForbidden creates WeaviateThingsListForbidden with default headers values
func NewWeaviateThingsListForbidden() *WeaviateThingsListForbidden {

	return &WeaviateThingsListForbidden{}
}

// WithPayload adds the payload to the weaviate things list forbidden response
func (o *WeaviateThingsListForbidden) WithPayload(payload *models.ErrorResponse) *WeaviateThingsListForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate things list forbidden response
func (o *WeaviateThingsListForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateThingsListForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WeaviateThingsListNotFoundCode is the HTTP code returned for type WeaviateThingsListNotFound
const WeaviateThingsListNotFoundCode int = 404

/*WeaviateThingsListNotFound Successful query result but no resource was found.

swagger:response weaviateThingsListNotFound
*/
type WeaviateThingsListNotFound struct {
}

// NewWeaviateThingsListNotFound creates WeaviateThingsListNotFound with default headers values
func NewWeaviateThingsListNotFound() *WeaviateThingsListNotFound {

	return &WeaviateThingsListNotFound{}
}

// WriteResponse to the client
func (o *WeaviateThingsListNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// WeaviateThingsListInternalServerErrorCode is the HTTP code returned for type WeaviateThingsListInternalServerError
const WeaviateThingsListInternalServerErrorCode int = 500

/*WeaviateThingsListInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response weaviateThingsListInternalServerError
*/
type WeaviateThingsListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewWeaviateThingsListInternalServerError creates WeaviateThingsListInternalServerError with default headers values
func NewWeaviateThingsListInternalServerError() *WeaviateThingsListInternalServerError {

	return &WeaviateThingsListInternalServerError{}
}

// WithPayload adds the payload to the weaviate things list internal server error response
func (o *WeaviateThingsListInternalServerError) WithPayload(payload *models.ErrorResponse) *WeaviateThingsListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate things list internal server error response
func (o *WeaviateThingsListInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateThingsListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
