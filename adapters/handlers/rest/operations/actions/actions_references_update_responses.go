//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2020 SeMI Technologies B.V. All rights reserved.
//
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/semi-technologies/weaviate/entities/models"
)

// ActionsReferencesUpdateOKCode is the HTTP code returned for type ActionsReferencesUpdateOK
const ActionsReferencesUpdateOKCode int = 200

/*ActionsReferencesUpdateOK Successfully replaced all the references.

swagger:response actionsReferencesUpdateOK
*/
type ActionsReferencesUpdateOK struct {
}

// NewActionsReferencesUpdateOK creates ActionsReferencesUpdateOK with default headers values
func NewActionsReferencesUpdateOK() *ActionsReferencesUpdateOK {
	return &ActionsReferencesUpdateOK{}
}

// WriteResponse to the client
func (o *ActionsReferencesUpdateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ActionsReferencesUpdateUnauthorizedCode is the HTTP code returned for type ActionsReferencesUpdateUnauthorized
const ActionsReferencesUpdateUnauthorizedCode int = 401

/*ActionsReferencesUpdateUnauthorized Unauthorized or invalid credentials.

swagger:response actionsReferencesUpdateUnauthorized
*/
type ActionsReferencesUpdateUnauthorized struct {
}

// NewActionsReferencesUpdateUnauthorized creates ActionsReferencesUpdateUnauthorized with default headers values
func NewActionsReferencesUpdateUnauthorized() *ActionsReferencesUpdateUnauthorized {
	return &ActionsReferencesUpdateUnauthorized{}
}

// WriteResponse to the client
func (o *ActionsReferencesUpdateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ActionsReferencesUpdateForbiddenCode is the HTTP code returned for type ActionsReferencesUpdateForbidden
const ActionsReferencesUpdateForbiddenCode int = 403

/*ActionsReferencesUpdateForbidden Forbidden

swagger:response actionsReferencesUpdateForbidden
*/
type ActionsReferencesUpdateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewActionsReferencesUpdateForbidden creates ActionsReferencesUpdateForbidden with default headers values
func NewActionsReferencesUpdateForbidden() *ActionsReferencesUpdateForbidden {
	return &ActionsReferencesUpdateForbidden{}
}

// WithPayload adds the payload to the actions references update forbidden response
func (o *ActionsReferencesUpdateForbidden) WithPayload(payload *models.ErrorResponse) *ActionsReferencesUpdateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the actions references update forbidden response
func (o *ActionsReferencesUpdateForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ActionsReferencesUpdateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ActionsReferencesUpdateUnprocessableEntityCode is the HTTP code returned for type ActionsReferencesUpdateUnprocessableEntity
const ActionsReferencesUpdateUnprocessableEntityCode int = 422

/*ActionsReferencesUpdateUnprocessableEntity Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the property exists or that it is a class?

swagger:response actionsReferencesUpdateUnprocessableEntity
*/
type ActionsReferencesUpdateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewActionsReferencesUpdateUnprocessableEntity creates ActionsReferencesUpdateUnprocessableEntity with default headers values
func NewActionsReferencesUpdateUnprocessableEntity() *ActionsReferencesUpdateUnprocessableEntity {
	return &ActionsReferencesUpdateUnprocessableEntity{}
}

// WithPayload adds the payload to the actions references update unprocessable entity response
func (o *ActionsReferencesUpdateUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *ActionsReferencesUpdateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the actions references update unprocessable entity response
func (o *ActionsReferencesUpdateUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ActionsReferencesUpdateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ActionsReferencesUpdateInternalServerErrorCode is the HTTP code returned for type ActionsReferencesUpdateInternalServerError
const ActionsReferencesUpdateInternalServerErrorCode int = 500

/*ActionsReferencesUpdateInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response actionsReferencesUpdateInternalServerError
*/
type ActionsReferencesUpdateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewActionsReferencesUpdateInternalServerError creates ActionsReferencesUpdateInternalServerError with default headers values
func NewActionsReferencesUpdateInternalServerError() *ActionsReferencesUpdateInternalServerError {
	return &ActionsReferencesUpdateInternalServerError{}
}

// WithPayload adds the payload to the actions references update internal server error response
func (o *ActionsReferencesUpdateInternalServerError) WithPayload(payload *models.ErrorResponse) *ActionsReferencesUpdateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the actions references update internal server error response
func (o *ActionsReferencesUpdateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ActionsReferencesUpdateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
