//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2020 SeMI Holding B.V. (registered @ Dutch Chamber of Commerce no 75221632). All rights reserved.
//  LICENSE WEAVIATE OPEN SOURCE: https://www.semi.technology/playbook/playbook/contract-weaviate-OSS.html
//  LICENSE WEAVIATE ENTERPRISE: https://www.semi.technology/playbook/contract-weaviate-enterprise.html
//  CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/semi-technologies/weaviate/entities/models"
)

// ActionsValidateOKCode is the HTTP code returned for type ActionsValidateOK
const ActionsValidateOKCode int = 200

/*ActionsValidateOK Successfully validated.

swagger:response actionsValidateOK
*/
type ActionsValidateOK struct {
}

// NewActionsValidateOK creates ActionsValidateOK with default headers values
func NewActionsValidateOK() *ActionsValidateOK {

	return &ActionsValidateOK{}
}

// WriteResponse to the client
func (o *ActionsValidateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ActionsValidateUnauthorizedCode is the HTTP code returned for type ActionsValidateUnauthorized
const ActionsValidateUnauthorizedCode int = 401

/*ActionsValidateUnauthorized Unauthorized or invalid credentials.

swagger:response actionsValidateUnauthorized
*/
type ActionsValidateUnauthorized struct {
}

// NewActionsValidateUnauthorized creates ActionsValidateUnauthorized with default headers values
func NewActionsValidateUnauthorized() *ActionsValidateUnauthorized {

	return &ActionsValidateUnauthorized{}
}

// WriteResponse to the client
func (o *ActionsValidateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ActionsValidateForbiddenCode is the HTTP code returned for type ActionsValidateForbidden
const ActionsValidateForbiddenCode int = 403

/*ActionsValidateForbidden Forbidden

swagger:response actionsValidateForbidden
*/
type ActionsValidateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewActionsValidateForbidden creates ActionsValidateForbidden with default headers values
func NewActionsValidateForbidden() *ActionsValidateForbidden {

	return &ActionsValidateForbidden{}
}

// WithPayload adds the payload to the actions validate forbidden response
func (o *ActionsValidateForbidden) WithPayload(payload *models.ErrorResponse) *ActionsValidateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the actions validate forbidden response
func (o *ActionsValidateForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ActionsValidateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ActionsValidateUnprocessableEntityCode is the HTTP code returned for type ActionsValidateUnprocessableEntity
const ActionsValidateUnprocessableEntityCode int = 422

/*ActionsValidateUnprocessableEntity Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?

swagger:response actionsValidateUnprocessableEntity
*/
type ActionsValidateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewActionsValidateUnprocessableEntity creates ActionsValidateUnprocessableEntity with default headers values
func NewActionsValidateUnprocessableEntity() *ActionsValidateUnprocessableEntity {

	return &ActionsValidateUnprocessableEntity{}
}

// WithPayload adds the payload to the actions validate unprocessable entity response
func (o *ActionsValidateUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *ActionsValidateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the actions validate unprocessable entity response
func (o *ActionsValidateUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ActionsValidateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ActionsValidateInternalServerErrorCode is the HTTP code returned for type ActionsValidateInternalServerError
const ActionsValidateInternalServerErrorCode int = 500

/*ActionsValidateInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response actionsValidateInternalServerError
*/
type ActionsValidateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewActionsValidateInternalServerError creates ActionsValidateInternalServerError with default headers values
func NewActionsValidateInternalServerError() *ActionsValidateInternalServerError {

	return &ActionsValidateInternalServerError{}
}

// WithPayload adds the payload to the actions validate internal server error response
func (o *ActionsValidateInternalServerError) WithPayload(payload *models.ErrorResponse) *ActionsValidateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the actions validate internal server error response
func (o *ActionsValidateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ActionsValidateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
