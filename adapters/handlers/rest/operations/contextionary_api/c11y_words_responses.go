//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2019 SeMI Holding B.V. (registered @ Dutch Chamber of Commerce no 75221632). All rights reserved.
//  LICENSE WEAVIATE OPEN SOURCE: https://www.semi.technology/playbook/playbook/contract-weaviate-OSS.html
//  LICENSE WEAVIATE ENTERPRISE: https://www.semi.technology/playbook/contract-weaviate-enterprise.html
//  CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package contextionary_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/semi-technologies/weaviate/entities/models"
)

// C11yWordsOKCode is the HTTP code returned for type C11yWordsOK
const C11yWordsOKCode int = 200

/*C11yWordsOK Successful response.

swagger:response c11yWordsOK
*/
type C11yWordsOK struct {

	/*
	  In: Body
	*/
	Payload *models.C11yWordsResponse `json:"body,omitempty"`
}

// NewC11yWordsOK creates C11yWordsOK with default headers values
func NewC11yWordsOK() *C11yWordsOK {

	return &C11yWordsOK{}
}

// WithPayload adds the payload to the c11y words o k response
func (o *C11yWordsOK) WithPayload(payload *models.C11yWordsResponse) *C11yWordsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the c11y words o k response
func (o *C11yWordsOK) SetPayload(payload *models.C11yWordsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *C11yWordsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// C11yWordsBadRequestCode is the HTTP code returned for type C11yWordsBadRequest
const C11yWordsBadRequestCode int = 400

/*C11yWordsBadRequest Incorrect request

swagger:response c11yWordsBadRequest
*/
type C11yWordsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewC11yWordsBadRequest creates C11yWordsBadRequest with default headers values
func NewC11yWordsBadRequest() *C11yWordsBadRequest {

	return &C11yWordsBadRequest{}
}

// WithPayload adds the payload to the c11y words bad request response
func (o *C11yWordsBadRequest) WithPayload(payload *models.ErrorResponse) *C11yWordsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the c11y words bad request response
func (o *C11yWordsBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *C11yWordsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// C11yWordsUnauthorizedCode is the HTTP code returned for type C11yWordsUnauthorized
const C11yWordsUnauthorizedCode int = 401

/*C11yWordsUnauthorized Unauthorized or invalid credentials.

swagger:response c11yWordsUnauthorized
*/
type C11yWordsUnauthorized struct {
}

// NewC11yWordsUnauthorized creates C11yWordsUnauthorized with default headers values
func NewC11yWordsUnauthorized() *C11yWordsUnauthorized {

	return &C11yWordsUnauthorized{}
}

// WriteResponse to the client
func (o *C11yWordsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// C11yWordsForbiddenCode is the HTTP code returned for type C11yWordsForbidden
const C11yWordsForbiddenCode int = 403

/*C11yWordsForbidden Forbidden

swagger:response c11yWordsForbidden
*/
type C11yWordsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewC11yWordsForbidden creates C11yWordsForbidden with default headers values
func NewC11yWordsForbidden() *C11yWordsForbidden {

	return &C11yWordsForbidden{}
}

// WithPayload adds the payload to the c11y words forbidden response
func (o *C11yWordsForbidden) WithPayload(payload *models.ErrorResponse) *C11yWordsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the c11y words forbidden response
func (o *C11yWordsForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *C11yWordsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// C11yWordsInternalServerErrorCode is the HTTP code returned for type C11yWordsInternalServerError
const C11yWordsInternalServerErrorCode int = 500

/*C11yWordsInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response c11yWordsInternalServerError
*/
type C11yWordsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewC11yWordsInternalServerError creates C11yWordsInternalServerError with default headers values
func NewC11yWordsInternalServerError() *C11yWordsInternalServerError {

	return &C11yWordsInternalServerError{}
}

// WithPayload adds the payload to the c11y words internal server error response
func (o *C11yWordsInternalServerError) WithPayload(payload *models.ErrorResponse) *C11yWordsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the c11y words internal server error response
func (o *C11yWordsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *C11yWordsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// C11yWordsNotImplementedCode is the HTTP code returned for type C11yWordsNotImplemented
const C11yWordsNotImplementedCode int = 501

/*C11yWordsNotImplemented Not (yet) implemented.

swagger:response c11yWordsNotImplemented
*/
type C11yWordsNotImplemented struct {
}

// NewC11yWordsNotImplemented creates C11yWordsNotImplemented with default headers values
func NewC11yWordsNotImplemented() *C11yWordsNotImplemented {

	return &C11yWordsNotImplemented{}
}

// WriteResponse to the client
func (o *C11yWordsNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(501)
}
