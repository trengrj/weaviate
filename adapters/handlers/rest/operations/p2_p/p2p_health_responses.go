//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
//  LICENSE WEAVIATE OPEN SOURCE: https://www.semi.technology/playbook/playbook/contract-weaviate-OSS.html
//  LICENSE WEAVIATE ENTERPRISE: https://www.semi.technology/playbook/contract-weaviate-enterprise.html
//  CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package p2_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/semi-technologies/weaviate/entities/models"
)

// P2pHealthOKCode is the HTTP code returned for type P2pHealthOK
const P2pHealthOKCode int = 200

/*P2pHealthOK Alive and kicking!

swagger:response p2pHealthOK
*/
type P2pHealthOK struct {
}

// NewP2pHealthOK creates P2pHealthOK with default headers values
func NewP2pHealthOK() *P2pHealthOK {

	return &P2pHealthOK{}
}

// WriteResponse to the client
func (o *P2pHealthOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// P2pHealthInternalServerErrorCode is the HTTP code returned for type P2pHealthInternalServerError
const P2pHealthInternalServerErrorCode int = 500

/*P2pHealthInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response p2pHealthInternalServerError
*/
type P2pHealthInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewP2pHealthInternalServerError creates P2pHealthInternalServerError with default headers values
func NewP2pHealthInternalServerError() *P2pHealthInternalServerError {

	return &P2pHealthInternalServerError{}
}

// WithPayload adds the payload to the p2p health internal server error response
func (o *P2pHealthInternalServerError) WithPayload(payload *models.ErrorResponse) *P2pHealthInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the p2p health internal server error response
func (o *P2pHealthInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *P2pHealthInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
