//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2020 SeMI Technologies B.V. All rights reserved.
//
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package batching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/semi-technologies/weaviate/entities/models"
)

// BatchingThingsCreateOKCode is the HTTP code returned for type BatchingThingsCreateOK
const BatchingThingsCreateOKCode int = 200

/*BatchingThingsCreateOK Request succeeded, see response body to get detailed information about each batched item.

swagger:response batchingThingsCreateOK
*/
type BatchingThingsCreateOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ThingsGetResponse `json:"body,omitempty"`
}

// NewBatchingThingsCreateOK creates BatchingThingsCreateOK with default headers values
func NewBatchingThingsCreateOK() *BatchingThingsCreateOK {
	return &BatchingThingsCreateOK{}
}

// WithPayload adds the payload to the batching things create o k response
func (o *BatchingThingsCreateOK) WithPayload(payload []*models.ThingsGetResponse) *BatchingThingsCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the batching things create o k response
func (o *BatchingThingsCreateOK) SetPayload(payload []*models.ThingsGetResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BatchingThingsCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ThingsGetResponse, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// BatchingThingsCreateUnauthorizedCode is the HTTP code returned for type BatchingThingsCreateUnauthorized
const BatchingThingsCreateUnauthorizedCode int = 401

/*BatchingThingsCreateUnauthorized Unauthorized or invalid credentials.

swagger:response batchingThingsCreateUnauthorized
*/
type BatchingThingsCreateUnauthorized struct {
}

// NewBatchingThingsCreateUnauthorized creates BatchingThingsCreateUnauthorized with default headers values
func NewBatchingThingsCreateUnauthorized() *BatchingThingsCreateUnauthorized {
	return &BatchingThingsCreateUnauthorized{}
}

// WriteResponse to the client
func (o *BatchingThingsCreateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// BatchingThingsCreateForbiddenCode is the HTTP code returned for type BatchingThingsCreateForbidden
const BatchingThingsCreateForbiddenCode int = 403

/*BatchingThingsCreateForbidden Forbidden

swagger:response batchingThingsCreateForbidden
*/
type BatchingThingsCreateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewBatchingThingsCreateForbidden creates BatchingThingsCreateForbidden with default headers values
func NewBatchingThingsCreateForbidden() *BatchingThingsCreateForbidden {
	return &BatchingThingsCreateForbidden{}
}

// WithPayload adds the payload to the batching things create forbidden response
func (o *BatchingThingsCreateForbidden) WithPayload(payload *models.ErrorResponse) *BatchingThingsCreateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the batching things create forbidden response
func (o *BatchingThingsCreateForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BatchingThingsCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BatchingThingsCreateUnprocessableEntityCode is the HTTP code returned for type BatchingThingsCreateUnprocessableEntity
const BatchingThingsCreateUnprocessableEntityCode int = 422

/*BatchingThingsCreateUnprocessableEntity Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?

swagger:response batchingThingsCreateUnprocessableEntity
*/
type BatchingThingsCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewBatchingThingsCreateUnprocessableEntity creates BatchingThingsCreateUnprocessableEntity with default headers values
func NewBatchingThingsCreateUnprocessableEntity() *BatchingThingsCreateUnprocessableEntity {
	return &BatchingThingsCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the batching things create unprocessable entity response
func (o *BatchingThingsCreateUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *BatchingThingsCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the batching things create unprocessable entity response
func (o *BatchingThingsCreateUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BatchingThingsCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BatchingThingsCreateInternalServerErrorCode is the HTTP code returned for type BatchingThingsCreateInternalServerError
const BatchingThingsCreateInternalServerErrorCode int = 500

/*BatchingThingsCreateInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response batchingThingsCreateInternalServerError
*/
type BatchingThingsCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewBatchingThingsCreateInternalServerError creates BatchingThingsCreateInternalServerError with default headers values
func NewBatchingThingsCreateInternalServerError() *BatchingThingsCreateInternalServerError {
	return &BatchingThingsCreateInternalServerError{}
}

// WithPayload adds the payload to the batching things create internal server error response
func (o *BatchingThingsCreateInternalServerError) WithPayload(payload *models.ErrorResponse) *BatchingThingsCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the batching things create internal server error response
func (o *BatchingThingsCreateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BatchingThingsCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
