// Code generated by go-swagger; DO NOT EDIT.

package p2_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// WeaviatePeersMetaEchoReader is a Reader for the WeaviatePeersMetaEcho structure.
type WeaviatePeersMetaEchoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WeaviatePeersMetaEchoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewWeaviatePeersMetaEchoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewWeaviatePeersMetaEchoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewWeaviatePeersMetaEchoOK creates a WeaviatePeersMetaEchoOK with default headers values
func NewWeaviatePeersMetaEchoOK() *WeaviatePeersMetaEchoOK {
	return &WeaviatePeersMetaEchoOK{}
}

/*WeaviatePeersMetaEchoOK handles this case with default header values.

Alive and kicking!
*/
type WeaviatePeersMetaEchoOK struct {
}

func (o *WeaviatePeersMetaEchoOK) Error() string {
	return fmt.Sprintf("[GET /p2p/health][%d] weaviatePeersMetaEchoOK ", 200)
}

func (o *WeaviatePeersMetaEchoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviatePeersMetaEchoInternalServerError creates a WeaviatePeersMetaEchoInternalServerError with default headers values
func NewWeaviatePeersMetaEchoInternalServerError() *WeaviatePeersMetaEchoInternalServerError {
	return &WeaviatePeersMetaEchoInternalServerError{}
}

/*WeaviatePeersMetaEchoInternalServerError handles this case with default header values.

Not healthy (yet)
*/
type WeaviatePeersMetaEchoInternalServerError struct {
}

func (o *WeaviatePeersMetaEchoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /p2p/health][%d] weaviatePeersMetaEchoInternalServerError ", 500)
}

func (o *WeaviatePeersMetaEchoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
