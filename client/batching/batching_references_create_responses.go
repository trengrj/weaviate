//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2020 SeMI Holding B.V. (registered @ Dutch Chamber of Commerce no 75221632). All rights reserved.
//  LICENSE WEAVIATE OPEN SOURCE: https://www.semi.technology/playbook/playbook/contract-weaviate-OSS.html
//  LICENSE WEAVIATE ENTERPRISE: https://www.semi.technology/playbook/contract-weaviate-enterprise.html
//  CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package batching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/semi-technologies/weaviate/entities/models"
)

// BatchingReferencesCreateReader is a Reader for the BatchingReferencesCreate structure.
type BatchingReferencesCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BatchingReferencesCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBatchingReferencesCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewBatchingReferencesCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBatchingReferencesCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewBatchingReferencesCreateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBatchingReferencesCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewBatchingReferencesCreateOK creates a BatchingReferencesCreateOK with default headers values
func NewBatchingReferencesCreateOK() *BatchingReferencesCreateOK {
	return &BatchingReferencesCreateOK{}
}

/*BatchingReferencesCreateOK handles this case with default header values.

Request Successful. Warning: A successful request does not guarantuee that every batched reference was successfully created. Inspect the response body to see which references succeeded and which failed.
*/
type BatchingReferencesCreateOK struct {
	Payload []*models.BatchReferenceResponse
}

func (o *BatchingReferencesCreateOK) Error() string {
	return fmt.Sprintf("[POST /batching/references][%d] batchingReferencesCreateOK  %+v", 200, o.Payload)
}

func (o *BatchingReferencesCreateOK) GetPayload() []*models.BatchReferenceResponse {
	return o.Payload
}

func (o *BatchingReferencesCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBatchingReferencesCreateUnauthorized creates a BatchingReferencesCreateUnauthorized with default headers values
func NewBatchingReferencesCreateUnauthorized() *BatchingReferencesCreateUnauthorized {
	return &BatchingReferencesCreateUnauthorized{}
}

/*BatchingReferencesCreateUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type BatchingReferencesCreateUnauthorized struct {
}

func (o *BatchingReferencesCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /batching/references][%d] batchingReferencesCreateUnauthorized ", 401)
}

func (o *BatchingReferencesCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBatchingReferencesCreateForbidden creates a BatchingReferencesCreateForbidden with default headers values
func NewBatchingReferencesCreateForbidden() *BatchingReferencesCreateForbidden {
	return &BatchingReferencesCreateForbidden{}
}

/*BatchingReferencesCreateForbidden handles this case with default header values.

Forbidden
*/
type BatchingReferencesCreateForbidden struct {
	Payload *models.ErrorResponse
}

func (o *BatchingReferencesCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /batching/references][%d] batchingReferencesCreateForbidden  %+v", 403, o.Payload)
}

func (o *BatchingReferencesCreateForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *BatchingReferencesCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBatchingReferencesCreateUnprocessableEntity creates a BatchingReferencesCreateUnprocessableEntity with default headers values
func NewBatchingReferencesCreateUnprocessableEntity() *BatchingReferencesCreateUnprocessableEntity {
	return &BatchingReferencesCreateUnprocessableEntity{}
}

/*BatchingReferencesCreateUnprocessableEntity handles this case with default header values.

Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?
*/
type BatchingReferencesCreateUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *BatchingReferencesCreateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /batching/references][%d] batchingReferencesCreateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *BatchingReferencesCreateUnprocessableEntity) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *BatchingReferencesCreateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBatchingReferencesCreateInternalServerError creates a BatchingReferencesCreateInternalServerError with default headers values
func NewBatchingReferencesCreateInternalServerError() *BatchingReferencesCreateInternalServerError {
	return &BatchingReferencesCreateInternalServerError{}
}

/*BatchingReferencesCreateInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type BatchingReferencesCreateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *BatchingReferencesCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /batching/references][%d] batchingReferencesCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *BatchingReferencesCreateInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *BatchingReferencesCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
