/*                          _       _
 *__      _____  __ ___   ___  __ _| |_ ___
 *\ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
 * \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
 *  \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
 *
 * Copyright Â© 2016 - 2018 Weaviate. All rights reserved.
 * LICENSE: https://github.com/creativesoftwarefdn/weaviate/blob/develop/LICENSE.md
 * AUTHOR: Bob van Luijt (bob@kub.design)
 * See www.creativesoftwarefdn.org for details
 * Contact: @CreativeSofwFdn / bob@kub.design
 */
// Code generated by go-swagger; DO NOT EDIT.

package actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/creativesoftwarefdn/weaviate/models"
)

// WeaviateActionHistoryGetReader is a Reader for the WeaviateActionHistoryGet structure.
type WeaviateActionHistoryGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WeaviateActionHistoryGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewWeaviateActionHistoryGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewWeaviateActionHistoryGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewWeaviateActionHistoryGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewWeaviateActionHistoryGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewWeaviateActionHistoryGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewWeaviateActionHistoryGetNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewWeaviateActionHistoryGetOK creates a WeaviateActionHistoryGetOK with default headers values
func NewWeaviateActionHistoryGetOK() *WeaviateActionHistoryGetOK {
	return &WeaviateActionHistoryGetOK{}
}

/*WeaviateActionHistoryGetOK handles this case with default header values.

Successful response.
*/
type WeaviateActionHistoryGetOK struct {
	Payload *models.ActionGetHistoryResponse
}

func (o *WeaviateActionHistoryGetOK) Error() string {
	return fmt.Sprintf("[GET /actions/{actionId}/history][%d] weaviateActionHistoryGetOK  %+v", 200, o.Payload)
}

func (o *WeaviateActionHistoryGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ActionGetHistoryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateActionHistoryGetUnauthorized creates a WeaviateActionHistoryGetUnauthorized with default headers values
func NewWeaviateActionHistoryGetUnauthorized() *WeaviateActionHistoryGetUnauthorized {
	return &WeaviateActionHistoryGetUnauthorized{}
}

/*WeaviateActionHistoryGetUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type WeaviateActionHistoryGetUnauthorized struct {
}

func (o *WeaviateActionHistoryGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /actions/{actionId}/history][%d] weaviateActionHistoryGetUnauthorized ", 401)
}

func (o *WeaviateActionHistoryGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateActionHistoryGetForbidden creates a WeaviateActionHistoryGetForbidden with default headers values
func NewWeaviateActionHistoryGetForbidden() *WeaviateActionHistoryGetForbidden {
	return &WeaviateActionHistoryGetForbidden{}
}

/*WeaviateActionHistoryGetForbidden handles this case with default header values.

The used API-key has insufficient permissions.
*/
type WeaviateActionHistoryGetForbidden struct {
}

func (o *WeaviateActionHistoryGetForbidden) Error() string {
	return fmt.Sprintf("[GET /actions/{actionId}/history][%d] weaviateActionHistoryGetForbidden ", 403)
}

func (o *WeaviateActionHistoryGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateActionHistoryGetNotFound creates a WeaviateActionHistoryGetNotFound with default headers values
func NewWeaviateActionHistoryGetNotFound() *WeaviateActionHistoryGetNotFound {
	return &WeaviateActionHistoryGetNotFound{}
}

/*WeaviateActionHistoryGetNotFound handles this case with default header values.

Successful query result but no resource was found.
*/
type WeaviateActionHistoryGetNotFound struct {
}

func (o *WeaviateActionHistoryGetNotFound) Error() string {
	return fmt.Sprintf("[GET /actions/{actionId}/history][%d] weaviateActionHistoryGetNotFound ", 404)
}

func (o *WeaviateActionHistoryGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateActionHistoryGetInternalServerError creates a WeaviateActionHistoryGetInternalServerError with default headers values
func NewWeaviateActionHistoryGetInternalServerError() *WeaviateActionHistoryGetInternalServerError {
	return &WeaviateActionHistoryGetInternalServerError{}
}

/*WeaviateActionHistoryGetInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type WeaviateActionHistoryGetInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateActionHistoryGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /actions/{actionId}/history][%d] weaviateActionHistoryGetInternalServerError  %+v", 500, o.Payload)
}

func (o *WeaviateActionHistoryGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateActionHistoryGetNotImplemented creates a WeaviateActionHistoryGetNotImplemented with default headers values
func NewWeaviateActionHistoryGetNotImplemented() *WeaviateActionHistoryGetNotImplemented {
	return &WeaviateActionHistoryGetNotImplemented{}
}

/*WeaviateActionHistoryGetNotImplemented handles this case with default header values.

Not (yet) implemented.
*/
type WeaviateActionHistoryGetNotImplemented struct {
}

func (o *WeaviateActionHistoryGetNotImplemented) Error() string {
	return fmt.Sprintf("[GET /actions/{actionId}/history][%d] weaviateActionHistoryGetNotImplemented ", 501)
}

func (o *WeaviateActionHistoryGetNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
