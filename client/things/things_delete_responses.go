//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
//  LICENSE: https://github.com/semi-technologies/weaviate/blob/develop/LICENSE.md
//  DESIGN & CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package things

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/semi-technologies/weaviate/entities/models"
)

// ThingsDeleteReader is a Reader for the ThingsDelete structure.
type ThingsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ThingsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewThingsDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewThingsDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewThingsDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewThingsDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewThingsDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewThingsDeleteNoContent creates a ThingsDeleteNoContent with default headers values
func NewThingsDeleteNoContent() *ThingsDeleteNoContent {
	return &ThingsDeleteNoContent{}
}

/*ThingsDeleteNoContent handles this case with default header values.

Successfully deleted.
*/
type ThingsDeleteNoContent struct {
}

func (o *ThingsDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] thingsDeleteNoContent ", 204)
}

func (o *ThingsDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewThingsDeleteUnauthorized creates a ThingsDeleteUnauthorized with default headers values
func NewThingsDeleteUnauthorized() *ThingsDeleteUnauthorized {
	return &ThingsDeleteUnauthorized{}
}

/*ThingsDeleteUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type ThingsDeleteUnauthorized struct {
}

func (o *ThingsDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] thingsDeleteUnauthorized ", 401)
}

func (o *ThingsDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewThingsDeleteForbidden creates a ThingsDeleteForbidden with default headers values
func NewThingsDeleteForbidden() *ThingsDeleteForbidden {
	return &ThingsDeleteForbidden{}
}

/*ThingsDeleteForbidden handles this case with default header values.

Forbidden
*/
type ThingsDeleteForbidden struct {
	Payload *models.ErrorResponse
}

func (o *ThingsDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] thingsDeleteForbidden  %+v", 403, o.Payload)
}

func (o *ThingsDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewThingsDeleteNotFound creates a ThingsDeleteNotFound with default headers values
func NewThingsDeleteNotFound() *ThingsDeleteNotFound {
	return &ThingsDeleteNotFound{}
}

/*ThingsDeleteNotFound handles this case with default header values.

Successful query result but no resource was found.
*/
type ThingsDeleteNotFound struct {
}

func (o *ThingsDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] thingsDeleteNotFound ", 404)
}

func (o *ThingsDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewThingsDeleteInternalServerError creates a ThingsDeleteInternalServerError with default headers values
func NewThingsDeleteInternalServerError() *ThingsDeleteInternalServerError {
	return &ThingsDeleteInternalServerError{}
}

/*ThingsDeleteInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type ThingsDeleteInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ThingsDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] thingsDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *ThingsDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
