//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
// 
//  Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
//  LICENSE WEAVIATE OPEN SOURCE: https://www.semi.technology/playbook/playbook/contract-weaviate-OSS.html
//  LICENSE WEAVIATE ENTERPRISE: https://www.semi.technology/playbook/contract-weaviate-enterprise.html
//  CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package things

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/semi-technologies/weaviate/entities/models"
)

// WeaviateThingsDeleteReader is a Reader for the WeaviateThingsDelete structure.
type WeaviateThingsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WeaviateThingsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewWeaviateThingsDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewWeaviateThingsDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewWeaviateThingsDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewWeaviateThingsDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewWeaviateThingsDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewWeaviateThingsDeleteNoContent creates a WeaviateThingsDeleteNoContent with default headers values
func NewWeaviateThingsDeleteNoContent() *WeaviateThingsDeleteNoContent {
	return &WeaviateThingsDeleteNoContent{}
}

/*WeaviateThingsDeleteNoContent handles this case with default header values.

Successfully deleted.
*/
type WeaviateThingsDeleteNoContent struct {
}

func (o *WeaviateThingsDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] weaviateThingsDeleteNoContent ", 204)
}

func (o *WeaviateThingsDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateThingsDeleteUnauthorized creates a WeaviateThingsDeleteUnauthorized with default headers values
func NewWeaviateThingsDeleteUnauthorized() *WeaviateThingsDeleteUnauthorized {
	return &WeaviateThingsDeleteUnauthorized{}
}

/*WeaviateThingsDeleteUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type WeaviateThingsDeleteUnauthorized struct {
}

func (o *WeaviateThingsDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] weaviateThingsDeleteUnauthorized ", 401)
}

func (o *WeaviateThingsDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateThingsDeleteForbidden creates a WeaviateThingsDeleteForbidden with default headers values
func NewWeaviateThingsDeleteForbidden() *WeaviateThingsDeleteForbidden {
	return &WeaviateThingsDeleteForbidden{}
}

/*WeaviateThingsDeleteForbidden handles this case with default header values.

Forbidden
*/
type WeaviateThingsDeleteForbidden struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateThingsDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] weaviateThingsDeleteForbidden  %+v", 403, o.Payload)
}

func (o *WeaviateThingsDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateThingsDeleteNotFound creates a WeaviateThingsDeleteNotFound with default headers values
func NewWeaviateThingsDeleteNotFound() *WeaviateThingsDeleteNotFound {
	return &WeaviateThingsDeleteNotFound{}
}

/*WeaviateThingsDeleteNotFound handles this case with default header values.

Successful query result but no resource was found.
*/
type WeaviateThingsDeleteNotFound struct {
}

func (o *WeaviateThingsDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] weaviateThingsDeleteNotFound ", 404)
}

func (o *WeaviateThingsDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateThingsDeleteInternalServerError creates a WeaviateThingsDeleteInternalServerError with default headers values
func NewWeaviateThingsDeleteInternalServerError() *WeaviateThingsDeleteInternalServerError {
	return &WeaviateThingsDeleteInternalServerError{}
}

/*WeaviateThingsDeleteInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type WeaviateThingsDeleteInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateThingsDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /things/{id}][%d] weaviateThingsDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *WeaviateThingsDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
