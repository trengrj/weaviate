//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2020 SeMI Technologies B.V. All rights reserved.
//
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package things

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/semi-technologies/weaviate/entities/models"
)

// ThingsCreateReader is a Reader for the ThingsCreate structure.
type ThingsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ThingsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewThingsCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewThingsCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewThingsCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewThingsCreateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewThingsCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewThingsCreateOK creates a ThingsCreateOK with default headers values
func NewThingsCreateOK() *ThingsCreateOK {
	return &ThingsCreateOK{}
}

/*ThingsCreateOK handles this case with default header values.

Thing created.
*/
type ThingsCreateOK struct {
	Payload *models.Thing
}

func (o *ThingsCreateOK) Error() string {
	return fmt.Sprintf("[POST /things][%d] thingsCreateOK  %+v", 200, o.Payload)
}

func (o *ThingsCreateOK) GetPayload() *models.Thing {
	return o.Payload
}

func (o *ThingsCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.Thing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewThingsCreateUnauthorized creates a ThingsCreateUnauthorized with default headers values
func NewThingsCreateUnauthorized() *ThingsCreateUnauthorized {
	return &ThingsCreateUnauthorized{}
}

/*ThingsCreateUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type ThingsCreateUnauthorized struct {
}

func (o *ThingsCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /things][%d] thingsCreateUnauthorized ", 401)
}

func (o *ThingsCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	return nil
}

// NewThingsCreateForbidden creates a ThingsCreateForbidden with default headers values
func NewThingsCreateForbidden() *ThingsCreateForbidden {
	return &ThingsCreateForbidden{}
}

/*ThingsCreateForbidden handles this case with default header values.

Forbidden
*/
type ThingsCreateForbidden struct {
	Payload *models.ErrorResponse
}

func (o *ThingsCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /things][%d] thingsCreateForbidden  %+v", 403, o.Payload)
}

func (o *ThingsCreateForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ThingsCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewThingsCreateUnprocessableEntity creates a ThingsCreateUnprocessableEntity with default headers values
func NewThingsCreateUnprocessableEntity() *ThingsCreateUnprocessableEntity {
	return &ThingsCreateUnprocessableEntity{}
}

/*ThingsCreateUnprocessableEntity handles this case with default header values.

Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?
*/
type ThingsCreateUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *ThingsCreateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /things][%d] thingsCreateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ThingsCreateUnprocessableEntity) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ThingsCreateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewThingsCreateInternalServerError creates a ThingsCreateInternalServerError with default headers values
func NewThingsCreateInternalServerError() *ThingsCreateInternalServerError {
	return &ThingsCreateInternalServerError{}
}

/*ThingsCreateInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type ThingsCreateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ThingsCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /things][%d] thingsCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *ThingsCreateInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ThingsCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
