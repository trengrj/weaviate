/*                          _       _
 *__      _____  __ ___   ___  __ _| |_ ___
 *\ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
 * \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
 *  \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
 *
 * Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
 * LICENSE: https://github.com/creativesoftwarefdn/weaviate/blob/develop/LICENSE.md
 * DESIGN & CONCEPT: Bob van Luijt (@bobvanluijt)
 * CONTACT: hello@creativesoftwarefdn.org
 */ // Code generated by go-swagger; DO NOT EDIT.

package contextionary_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/creativesoftwarefdn/weaviate/models"
)

// WeaviateC11yContextReader is a Reader for the WeaviateC11yContext structure.
type WeaviateC11yContextReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WeaviateC11yContextReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewWeaviateC11yContextOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewWeaviateC11yContextBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewWeaviateC11yContextUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewWeaviateC11yContextForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewWeaviateC11yContextInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewWeaviateC11yContextNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewWeaviateC11yContextOK creates a WeaviateC11yContextOK with default headers values
func NewWeaviateC11yContextOK() *WeaviateC11yContextOK {
	return &WeaviateC11yContextOK{}
}

/*WeaviateC11yContextOK handles this case with default header values.

Successful response.
*/
type WeaviateC11yContextOK struct {
	Payload *models.C11yContextResponse
}

func (o *WeaviateC11yContextOK) Error() string {
	return fmt.Sprintf("[GET /c11y/context/{words}][%d] weaviateC11yContextOK  %+v", 200, o.Payload)
}

func (o *WeaviateC11yContextOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.C11yContextResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateC11yContextBadRequest creates a WeaviateC11yContextBadRequest with default headers values
func NewWeaviateC11yContextBadRequest() *WeaviateC11yContextBadRequest {
	return &WeaviateC11yContextBadRequest{}
}

/*WeaviateC11yContextBadRequest handles this case with default header values.

Incorrect request
*/
type WeaviateC11yContextBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateC11yContextBadRequest) Error() string {
	return fmt.Sprintf("[GET /c11y/context/{words}][%d] weaviateC11yContextBadRequest  %+v", 400, o.Payload)
}

func (o *WeaviateC11yContextBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateC11yContextUnauthorized creates a WeaviateC11yContextUnauthorized with default headers values
func NewWeaviateC11yContextUnauthorized() *WeaviateC11yContextUnauthorized {
	return &WeaviateC11yContextUnauthorized{}
}

/*WeaviateC11yContextUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type WeaviateC11yContextUnauthorized struct {
}

func (o *WeaviateC11yContextUnauthorized) Error() string {
	return fmt.Sprintf("[GET /c11y/context/{words}][%d] weaviateC11yContextUnauthorized ", 401)
}

func (o *WeaviateC11yContextUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateC11yContextForbidden creates a WeaviateC11yContextForbidden with default headers values
func NewWeaviateC11yContextForbidden() *WeaviateC11yContextForbidden {
	return &WeaviateC11yContextForbidden{}
}

/*WeaviateC11yContextForbidden handles this case with default header values.

Insufficient permissions.
*/
type WeaviateC11yContextForbidden struct {
}

func (o *WeaviateC11yContextForbidden) Error() string {
	return fmt.Sprintf("[GET /c11y/context/{words}][%d] weaviateC11yContextForbidden ", 403)
}

func (o *WeaviateC11yContextForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateC11yContextInternalServerError creates a WeaviateC11yContextInternalServerError with default headers values
func NewWeaviateC11yContextInternalServerError() *WeaviateC11yContextInternalServerError {
	return &WeaviateC11yContextInternalServerError{}
}

/*WeaviateC11yContextInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type WeaviateC11yContextInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateC11yContextInternalServerError) Error() string {
	return fmt.Sprintf("[GET /c11y/context/{words}][%d] weaviateC11yContextInternalServerError  %+v", 500, o.Payload)
}

func (o *WeaviateC11yContextInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateC11yContextNotImplemented creates a WeaviateC11yContextNotImplemented with default headers values
func NewWeaviateC11yContextNotImplemented() *WeaviateC11yContextNotImplemented {
	return &WeaviateC11yContextNotImplemented{}
}

/*WeaviateC11yContextNotImplemented handles this case with default header values.

Not (yet) implemented.
*/
type WeaviateC11yContextNotImplemented struct {
}

func (o *WeaviateC11yContextNotImplemented) Error() string {
	return fmt.Sprintf("[GET /c11y/context/{words}][%d] weaviateC11yContextNotImplemented ", 501)
}

func (o *WeaviateC11yContextNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
