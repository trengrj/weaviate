//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2020 SeMI Technologies B.V. All rights reserved.
//
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package contextionary_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/semi-technologies/weaviate/entities/models"
)

// C11yWordsReader is a Reader for the C11yWords structure.
type C11yWordsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *C11yWordsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewC11yWordsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewC11yWordsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewC11yWordsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewC11yWordsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewC11yWordsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewC11yWordsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewC11yWordsOK creates a C11yWordsOK with default headers values
func NewC11yWordsOK() *C11yWordsOK {
	return &C11yWordsOK{}
}

/*C11yWordsOK handles this case with default header values.

Successful response.
*/
type C11yWordsOK struct {
	Payload *models.C11yWordsResponse
}

func (o *C11yWordsOK) Error() string {
	return fmt.Sprintf("[GET /c11y/words/{words}][%d] c11yWordsOK  %+v", 200, o.Payload)
}

func (o *C11yWordsOK) GetPayload() *models.C11yWordsResponse {
	return o.Payload
}

func (o *C11yWordsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.C11yWordsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewC11yWordsBadRequest creates a C11yWordsBadRequest with default headers values
func NewC11yWordsBadRequest() *C11yWordsBadRequest {
	return &C11yWordsBadRequest{}
}

/*C11yWordsBadRequest handles this case with default header values.

Incorrect request
*/
type C11yWordsBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *C11yWordsBadRequest) Error() string {
	return fmt.Sprintf("[GET /c11y/words/{words}][%d] c11yWordsBadRequest  %+v", 400, o.Payload)
}

func (o *C11yWordsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *C11yWordsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewC11yWordsUnauthorized creates a C11yWordsUnauthorized with default headers values
func NewC11yWordsUnauthorized() *C11yWordsUnauthorized {
	return &C11yWordsUnauthorized{}
}

/*C11yWordsUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type C11yWordsUnauthorized struct {
}

func (o *C11yWordsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /c11y/words/{words}][%d] c11yWordsUnauthorized ", 401)
}

func (o *C11yWordsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	return nil
}

// NewC11yWordsForbidden creates a C11yWordsForbidden with default headers values
func NewC11yWordsForbidden() *C11yWordsForbidden {
	return &C11yWordsForbidden{}
}

/*C11yWordsForbidden handles this case with default header values.

Forbidden
*/
type C11yWordsForbidden struct {
	Payload *models.ErrorResponse
}

func (o *C11yWordsForbidden) Error() string {
	return fmt.Sprintf("[GET /c11y/words/{words}][%d] c11yWordsForbidden  %+v", 403, o.Payload)
}

func (o *C11yWordsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *C11yWordsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewC11yWordsInternalServerError creates a C11yWordsInternalServerError with default headers values
func NewC11yWordsInternalServerError() *C11yWordsInternalServerError {
	return &C11yWordsInternalServerError{}
}

/*C11yWordsInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type C11yWordsInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *C11yWordsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /c11y/words/{words}][%d] c11yWordsInternalServerError  %+v", 500, o.Payload)
}

func (o *C11yWordsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *C11yWordsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewC11yWordsNotImplemented creates a C11yWordsNotImplemented with default headers values
func NewC11yWordsNotImplemented() *C11yWordsNotImplemented {
	return &C11yWordsNotImplemented{}
}

/*C11yWordsNotImplemented handles this case with default header values.

Not (yet) implemented.
*/
type C11yWordsNotImplemented struct {
}

func (o *C11yWordsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /c11y/words/{words}][%d] c11yWordsNotImplemented ", 501)
}

func (o *C11yWordsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	return nil
}
