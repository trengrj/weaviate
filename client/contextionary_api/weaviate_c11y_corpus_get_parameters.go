//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
//  LICENSE: https://github.com/semi-technologies/weaviate/blob/develop/LICENSE.md
//  DESIGN & CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package contextionary_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewWeaviateC11yCorpusGetParams creates a new WeaviateC11yCorpusGetParams object
// with the default values initialized.
func NewWeaviateC11yCorpusGetParams() *WeaviateC11yCorpusGetParams {
	var ()
	return &WeaviateC11yCorpusGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewWeaviateC11yCorpusGetParamsWithTimeout creates a new WeaviateC11yCorpusGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewWeaviateC11yCorpusGetParamsWithTimeout(timeout time.Duration) *WeaviateC11yCorpusGetParams {
	var ()
	return &WeaviateC11yCorpusGetParams{

		timeout: timeout,
	}
}

// NewWeaviateC11yCorpusGetParamsWithContext creates a new WeaviateC11yCorpusGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewWeaviateC11yCorpusGetParamsWithContext(ctx context.Context) *WeaviateC11yCorpusGetParams {
	var ()
	return &WeaviateC11yCorpusGetParams{

		Context: ctx,
	}
}

// NewWeaviateC11yCorpusGetParamsWithHTTPClient creates a new WeaviateC11yCorpusGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewWeaviateC11yCorpusGetParamsWithHTTPClient(client *http.Client) *WeaviateC11yCorpusGetParams {
	var ()
	return &WeaviateC11yCorpusGetParams{
		HTTPClient: client,
	}
}

/*WeaviateC11yCorpusGetParams contains all the parameters to send to the API endpoint
for the weaviate c11y corpus get operation typically these are written to a http.Request
*/
type WeaviateC11yCorpusGetParams struct {

	/*Corpus
	  A text corpus

	*/
	Corpus WeaviateC11yCorpusGetBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the weaviate c11y corpus get params
func (o *WeaviateC11yCorpusGetParams) WithTimeout(timeout time.Duration) *WeaviateC11yCorpusGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the weaviate c11y corpus get params
func (o *WeaviateC11yCorpusGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the weaviate c11y corpus get params
func (o *WeaviateC11yCorpusGetParams) WithContext(ctx context.Context) *WeaviateC11yCorpusGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the weaviate c11y corpus get params
func (o *WeaviateC11yCorpusGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the weaviate c11y corpus get params
func (o *WeaviateC11yCorpusGetParams) WithHTTPClient(client *http.Client) *WeaviateC11yCorpusGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the weaviate c11y corpus get params
func (o *WeaviateC11yCorpusGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCorpus adds the corpus to the weaviate c11y corpus get params
func (o *WeaviateC11yCorpusGetParams) WithCorpus(corpus WeaviateC11yCorpusGetBody) *WeaviateC11yCorpusGetParams {
	o.SetCorpus(corpus)
	return o
}

// SetCorpus adds the corpus to the weaviate c11y corpus get params
func (o *WeaviateC11yCorpusGetParams) SetCorpus(corpus WeaviateC11yCorpusGetBody) {
	o.Corpus = corpus
}

// WriteToRequest writes these params to a swagger request
func (o *WeaviateC11yCorpusGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Corpus); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
