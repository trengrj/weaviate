//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2019 Weaviate. All rights reserved.
//  LICENSE: https://github.com/semi-technologies/weaviate/blob/develop/LICENSE.md
//  DESIGN & CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/semi-technologies/weaviate/entities/models"
)

// WeaviateSchemaActionsDeleteReader is a Reader for the WeaviateSchemaActionsDelete structure.
type WeaviateSchemaActionsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WeaviateSchemaActionsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewWeaviateSchemaActionsDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewWeaviateSchemaActionsDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewWeaviateSchemaActionsDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewWeaviateSchemaActionsDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewWeaviateSchemaActionsDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewWeaviateSchemaActionsDeleteOK creates a WeaviateSchemaActionsDeleteOK with default headers values
func NewWeaviateSchemaActionsDeleteOK() *WeaviateSchemaActionsDeleteOK {
	return &WeaviateSchemaActionsDeleteOK{}
}

/*WeaviateSchemaActionsDeleteOK handles this case with default header values.

Removed the Action class from the ontology.
*/
type WeaviateSchemaActionsDeleteOK struct {
}

func (o *WeaviateSchemaActionsDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /schema/actions/{className}][%d] weaviateSchemaActionsDeleteOK ", 200)
}

func (o *WeaviateSchemaActionsDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateSchemaActionsDeleteBadRequest creates a WeaviateSchemaActionsDeleteBadRequest with default headers values
func NewWeaviateSchemaActionsDeleteBadRequest() *WeaviateSchemaActionsDeleteBadRequest {
	return &WeaviateSchemaActionsDeleteBadRequest{}
}

/*WeaviateSchemaActionsDeleteBadRequest handles this case with default header values.

Could not delete the Action class.
*/
type WeaviateSchemaActionsDeleteBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateSchemaActionsDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /schema/actions/{className}][%d] weaviateSchemaActionsDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *WeaviateSchemaActionsDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateSchemaActionsDeleteUnauthorized creates a WeaviateSchemaActionsDeleteUnauthorized with default headers values
func NewWeaviateSchemaActionsDeleteUnauthorized() *WeaviateSchemaActionsDeleteUnauthorized {
	return &WeaviateSchemaActionsDeleteUnauthorized{}
}

/*WeaviateSchemaActionsDeleteUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type WeaviateSchemaActionsDeleteUnauthorized struct {
}

func (o *WeaviateSchemaActionsDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /schema/actions/{className}][%d] weaviateSchemaActionsDeleteUnauthorized ", 401)
}

func (o *WeaviateSchemaActionsDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateSchemaActionsDeleteForbidden creates a WeaviateSchemaActionsDeleteForbidden with default headers values
func NewWeaviateSchemaActionsDeleteForbidden() *WeaviateSchemaActionsDeleteForbidden {
	return &WeaviateSchemaActionsDeleteForbidden{}
}

/*WeaviateSchemaActionsDeleteForbidden handles this case with default header values.

Forbidden
*/
type WeaviateSchemaActionsDeleteForbidden struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateSchemaActionsDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /schema/actions/{className}][%d] weaviateSchemaActionsDeleteForbidden  %+v", 403, o.Payload)
}

func (o *WeaviateSchemaActionsDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateSchemaActionsDeleteInternalServerError creates a WeaviateSchemaActionsDeleteInternalServerError with default headers values
func NewWeaviateSchemaActionsDeleteInternalServerError() *WeaviateSchemaActionsDeleteInternalServerError {
	return &WeaviateSchemaActionsDeleteInternalServerError{}
}

/*WeaviateSchemaActionsDeleteInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type WeaviateSchemaActionsDeleteInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateSchemaActionsDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /schema/actions/{className}][%d] weaviateSchemaActionsDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *WeaviateSchemaActionsDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
