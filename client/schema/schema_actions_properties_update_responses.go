//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2019 SeMI Holding B.V. (registered @ Dutch Chamber of Commerce no 75221632). All rights reserved.
//  LICENSE WEAVIATE OPEN SOURCE: https://www.semi.technology/playbook/playbook/contract-weaviate-OSS.html
//  LICENSE WEAVIATE ENTERPRISE: https://www.semi.technology/playbook/contract-weaviate-enterprise.html
//  CONCEPT: Bob van Luijt (@bobvanluijt)
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/semi-technologies/weaviate/entities/models"
)

// SchemaActionsPropertiesUpdateReader is a Reader for the SchemaActionsPropertiesUpdate structure.
type SchemaActionsPropertiesUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SchemaActionsPropertiesUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSchemaActionsPropertiesUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewSchemaActionsPropertiesUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSchemaActionsPropertiesUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewSchemaActionsPropertiesUpdateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSchemaActionsPropertiesUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSchemaActionsPropertiesUpdateOK creates a SchemaActionsPropertiesUpdateOK with default headers values
func NewSchemaActionsPropertiesUpdateOK() *SchemaActionsPropertiesUpdateOK {
	return &SchemaActionsPropertiesUpdateOK{}
}

/*SchemaActionsPropertiesUpdateOK handles this case with default header values.

Changes applied.
*/
type SchemaActionsPropertiesUpdateOK struct {
}

func (o *SchemaActionsPropertiesUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /schema/actions/{className}/properties/{propertyName}][%d] schemaActionsPropertiesUpdateOK ", 200)
}

func (o *SchemaActionsPropertiesUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSchemaActionsPropertiesUpdateUnauthorized creates a SchemaActionsPropertiesUpdateUnauthorized with default headers values
func NewSchemaActionsPropertiesUpdateUnauthorized() *SchemaActionsPropertiesUpdateUnauthorized {
	return &SchemaActionsPropertiesUpdateUnauthorized{}
}

/*SchemaActionsPropertiesUpdateUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type SchemaActionsPropertiesUpdateUnauthorized struct {
}

func (o *SchemaActionsPropertiesUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /schema/actions/{className}/properties/{propertyName}][%d] schemaActionsPropertiesUpdateUnauthorized ", 401)
}

func (o *SchemaActionsPropertiesUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSchemaActionsPropertiesUpdateForbidden creates a SchemaActionsPropertiesUpdateForbidden with default headers values
func NewSchemaActionsPropertiesUpdateForbidden() *SchemaActionsPropertiesUpdateForbidden {
	return &SchemaActionsPropertiesUpdateForbidden{}
}

/*SchemaActionsPropertiesUpdateForbidden handles this case with default header values.

Forbidden
*/
type SchemaActionsPropertiesUpdateForbidden struct {
	Payload *models.ErrorResponse
}

func (o *SchemaActionsPropertiesUpdateForbidden) Error() string {
	return fmt.Sprintf("[PUT /schema/actions/{className}/properties/{propertyName}][%d] schemaActionsPropertiesUpdateForbidden  %+v", 403, o.Payload)
}

func (o *SchemaActionsPropertiesUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemaActionsPropertiesUpdateUnprocessableEntity creates a SchemaActionsPropertiesUpdateUnprocessableEntity with default headers values
func NewSchemaActionsPropertiesUpdateUnprocessableEntity() *SchemaActionsPropertiesUpdateUnprocessableEntity {
	return &SchemaActionsPropertiesUpdateUnprocessableEntity{}
}

/*SchemaActionsPropertiesUpdateUnprocessableEntity handles this case with default header values.

Invalid update.
*/
type SchemaActionsPropertiesUpdateUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *SchemaActionsPropertiesUpdateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /schema/actions/{className}/properties/{propertyName}][%d] schemaActionsPropertiesUpdateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SchemaActionsPropertiesUpdateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemaActionsPropertiesUpdateInternalServerError creates a SchemaActionsPropertiesUpdateInternalServerError with default headers values
func NewSchemaActionsPropertiesUpdateInternalServerError() *SchemaActionsPropertiesUpdateInternalServerError {
	return &SchemaActionsPropertiesUpdateInternalServerError{}
}

/*SchemaActionsPropertiesUpdateInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type SchemaActionsPropertiesUpdateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *SchemaActionsPropertiesUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /schema/actions/{className}/properties/{propertyName}][%d] schemaActionsPropertiesUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *SchemaActionsPropertiesUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
