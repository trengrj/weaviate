// Code generated by go-swagger; DO NOT EDIT.

package keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// WeaviateKeysDeleteReader is a Reader for the WeaviateKeysDelete structure.
type WeaviateKeysDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WeaviateKeysDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewWeaviateKeysDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewWeaviateKeysDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewWeaviateKeysDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewWeaviateKeysDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewWeaviateKeysDeleteNoContent creates a WeaviateKeysDeleteNoContent with default headers values
func NewWeaviateKeysDeleteNoContent() *WeaviateKeysDeleteNoContent {
	return &WeaviateKeysDeleteNoContent{}
}

/*WeaviateKeysDeleteNoContent handles this case with default header values.

Successfully deleted.
*/
type WeaviateKeysDeleteNoContent struct {
}

func (o *WeaviateKeysDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /keys/{keyId}][%d] weaviateKeysDeleteNoContent ", 204)
}

func (o *WeaviateKeysDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateKeysDeleteUnauthorized creates a WeaviateKeysDeleteUnauthorized with default headers values
func NewWeaviateKeysDeleteUnauthorized() *WeaviateKeysDeleteUnauthorized {
	return &WeaviateKeysDeleteUnauthorized{}
}

/*WeaviateKeysDeleteUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type WeaviateKeysDeleteUnauthorized struct {
}

func (o *WeaviateKeysDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /keys/{keyId}][%d] weaviateKeysDeleteUnauthorized ", 401)
}

func (o *WeaviateKeysDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateKeysDeleteForbidden creates a WeaviateKeysDeleteForbidden with default headers values
func NewWeaviateKeysDeleteForbidden() *WeaviateKeysDeleteForbidden {
	return &WeaviateKeysDeleteForbidden{}
}

/*WeaviateKeysDeleteForbidden handles this case with default header values.

The used API-key has insufficient permissions.
*/
type WeaviateKeysDeleteForbidden struct {
}

func (o *WeaviateKeysDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /keys/{keyId}][%d] weaviateKeysDeleteForbidden ", 403)
}

func (o *WeaviateKeysDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateKeysDeleteNotFound creates a WeaviateKeysDeleteNotFound with default headers values
func NewWeaviateKeysDeleteNotFound() *WeaviateKeysDeleteNotFound {
	return &WeaviateKeysDeleteNotFound{}
}

/*WeaviateKeysDeleteNotFound handles this case with default header values.

Successful query result but no resource was found.
*/
type WeaviateKeysDeleteNotFound struct {
}

func (o *WeaviateKeysDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /keys/{keyId}][%d] weaviateKeysDeleteNotFound ", 404)
}

func (o *WeaviateKeysDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
