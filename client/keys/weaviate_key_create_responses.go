// Code generated by go-swagger; DO NOT EDIT.

package keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/creativesoftwarefdn/weaviate/models"
)

// WeaviateKeyCreateReader is a Reader for the WeaviateKeyCreate structure.
type WeaviateKeyCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WeaviateKeyCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewWeaviateKeyCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewWeaviateKeyCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewWeaviateKeyCreateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewWeaviateKeyCreateOK creates a WeaviateKeyCreateOK with default headers values
func NewWeaviateKeyCreateOK() *WeaviateKeyCreateOK {
	return &WeaviateKeyCreateOK{}
}

/*WeaviateKeyCreateOK handles this case with default header values.

Successfully created.
*/
type WeaviateKeyCreateOK struct {
	Payload *models.KeyTokenGetResponse
}

func (o *WeaviateKeyCreateOK) Error() string {
	return fmt.Sprintf("[POST /keys][%d] weaviateKeyCreateOK  %+v", 200, o.Payload)
}

func (o *WeaviateKeyCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeyTokenGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateKeyCreateUnauthorized creates a WeaviateKeyCreateUnauthorized with default headers values
func NewWeaviateKeyCreateUnauthorized() *WeaviateKeyCreateUnauthorized {
	return &WeaviateKeyCreateUnauthorized{}
}

/*WeaviateKeyCreateUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type WeaviateKeyCreateUnauthorized struct {
}

func (o *WeaviateKeyCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /keys][%d] weaviateKeyCreateUnauthorized ", 401)
}

func (o *WeaviateKeyCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateKeyCreateUnprocessableEntity creates a WeaviateKeyCreateUnprocessableEntity with default headers values
func NewWeaviateKeyCreateUnprocessableEntity() *WeaviateKeyCreateUnprocessableEntity {
	return &WeaviateKeyCreateUnprocessableEntity{}
}

/*WeaviateKeyCreateUnprocessableEntity handles this case with default header values.

Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?
*/
type WeaviateKeyCreateUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateKeyCreateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /keys][%d] weaviateKeyCreateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *WeaviateKeyCreateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
