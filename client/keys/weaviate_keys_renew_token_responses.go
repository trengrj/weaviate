// Code generated by go-swagger; DO NOT EDIT.

package keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/creativesoftwarefdn/weaviate/models"
)

// WeaviateKeysRenewTokenReader is a Reader for the WeaviateKeysRenewToken structure.
type WeaviateKeysRenewTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WeaviateKeysRenewTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewWeaviateKeysRenewTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewWeaviateKeysRenewTokenUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewWeaviateKeysRenewTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewWeaviateKeysRenewTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewWeaviateKeysRenewTokenUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewWeaviateKeysRenewTokenOK creates a WeaviateKeysRenewTokenOK with default headers values
func NewWeaviateKeysRenewTokenOK() *WeaviateKeysRenewTokenOK {
	return &WeaviateKeysRenewTokenOK{}
}

/*WeaviateKeysRenewTokenOK handles this case with default header values.

Successful response.
*/
type WeaviateKeysRenewTokenOK struct {
	Payload *models.KeyTokenGetResponse
}

func (o *WeaviateKeysRenewTokenOK) Error() string {
	return fmt.Sprintf("[PUT /keys/{keyId}/renew-token][%d] weaviateKeysRenewTokenOK  %+v", 200, o.Payload)
}

func (o *WeaviateKeysRenewTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeyTokenGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateKeysRenewTokenUnauthorized creates a WeaviateKeysRenewTokenUnauthorized with default headers values
func NewWeaviateKeysRenewTokenUnauthorized() *WeaviateKeysRenewTokenUnauthorized {
	return &WeaviateKeysRenewTokenUnauthorized{}
}

/*WeaviateKeysRenewTokenUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type WeaviateKeysRenewTokenUnauthorized struct {
}

func (o *WeaviateKeysRenewTokenUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /keys/{keyId}/renew-token][%d] weaviateKeysRenewTokenUnauthorized ", 401)
}

func (o *WeaviateKeysRenewTokenUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateKeysRenewTokenForbidden creates a WeaviateKeysRenewTokenForbidden with default headers values
func NewWeaviateKeysRenewTokenForbidden() *WeaviateKeysRenewTokenForbidden {
	return &WeaviateKeysRenewTokenForbidden{}
}

/*WeaviateKeysRenewTokenForbidden handles this case with default header values.

The used API-key has insufficient permissions.
*/
type WeaviateKeysRenewTokenForbidden struct {
}

func (o *WeaviateKeysRenewTokenForbidden) Error() string {
	return fmt.Sprintf("[PUT /keys/{keyId}/renew-token][%d] weaviateKeysRenewTokenForbidden ", 403)
}

func (o *WeaviateKeysRenewTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateKeysRenewTokenNotFound creates a WeaviateKeysRenewTokenNotFound with default headers values
func NewWeaviateKeysRenewTokenNotFound() *WeaviateKeysRenewTokenNotFound {
	return &WeaviateKeysRenewTokenNotFound{}
}

/*WeaviateKeysRenewTokenNotFound handles this case with default header values.

Successful query result but no resource was found.
*/
type WeaviateKeysRenewTokenNotFound struct {
}

func (o *WeaviateKeysRenewTokenNotFound) Error() string {
	return fmt.Sprintf("[PUT /keys/{keyId}/renew-token][%d] weaviateKeysRenewTokenNotFound ", 404)
}

func (o *WeaviateKeysRenewTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateKeysRenewTokenUnprocessableEntity creates a WeaviateKeysRenewTokenUnprocessableEntity with default headers values
func NewWeaviateKeysRenewTokenUnprocessableEntity() *WeaviateKeysRenewTokenUnprocessableEntity {
	return &WeaviateKeysRenewTokenUnprocessableEntity{}
}

/*WeaviateKeysRenewTokenUnprocessableEntity handles this case with default header values.

Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?
*/
type WeaviateKeysRenewTokenUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *WeaviateKeysRenewTokenUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /keys/{keyId}/renew-token][%d] weaviateKeysRenewTokenUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *WeaviateKeysRenewTokenUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
