// Code generated by go-swagger; DO NOT EDIT.

package knowledge_tools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/creativesoftwarefdn/weaviate/models"
)

// WeaviateToolsMapReader is a Reader for the WeaviateToolsMap structure.
type WeaviateToolsMapReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WeaviateToolsMapReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewWeaviateToolsMapOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewWeaviateToolsMapUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewWeaviateToolsMapForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewWeaviateToolsMapNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewWeaviateToolsMapNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewWeaviateToolsMapOK creates a WeaviateToolsMapOK with default headers values
func NewWeaviateToolsMapOK() *WeaviateToolsMapOK {
	return &WeaviateToolsMapOK{}
}

/*WeaviateToolsMapOK handles this case with default header values.

Successful response.
*/
type WeaviateToolsMapOK struct {
	Payload *models.ToolsMapRequestResponse
}

func (o *WeaviateToolsMapOK) Error() string {
	return fmt.Sprintf("[POST /tools/map][%d] weaviateToolsMapOK  %+v", 200, o.Payload)
}

func (o *WeaviateToolsMapOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ToolsMapRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWeaviateToolsMapUnauthorized creates a WeaviateToolsMapUnauthorized with default headers values
func NewWeaviateToolsMapUnauthorized() *WeaviateToolsMapUnauthorized {
	return &WeaviateToolsMapUnauthorized{}
}

/*WeaviateToolsMapUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type WeaviateToolsMapUnauthorized struct {
}

func (o *WeaviateToolsMapUnauthorized) Error() string {
	return fmt.Sprintf("[POST /tools/map][%d] weaviateToolsMapUnauthorized ", 401)
}

func (o *WeaviateToolsMapUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateToolsMapForbidden creates a WeaviateToolsMapForbidden with default headers values
func NewWeaviateToolsMapForbidden() *WeaviateToolsMapForbidden {
	return &WeaviateToolsMapForbidden{}
}

/*WeaviateToolsMapForbidden handles this case with default header values.

The used API-key has insufficient permissions.
*/
type WeaviateToolsMapForbidden struct {
}

func (o *WeaviateToolsMapForbidden) Error() string {
	return fmt.Sprintf("[POST /tools/map][%d] weaviateToolsMapForbidden ", 403)
}

func (o *WeaviateToolsMapForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateToolsMapNotFound creates a WeaviateToolsMapNotFound with default headers values
func NewWeaviateToolsMapNotFound() *WeaviateToolsMapNotFound {
	return &WeaviateToolsMapNotFound{}
}

/*WeaviateToolsMapNotFound handles this case with default header values.

Successful query result but no resource was found.
*/
type WeaviateToolsMapNotFound struct {
}

func (o *WeaviateToolsMapNotFound) Error() string {
	return fmt.Sprintf("[POST /tools/map][%d] weaviateToolsMapNotFound ", 404)
}

func (o *WeaviateToolsMapNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWeaviateToolsMapNotImplemented creates a WeaviateToolsMapNotImplemented with default headers values
func NewWeaviateToolsMapNotImplemented() *WeaviateToolsMapNotImplemented {
	return &WeaviateToolsMapNotImplemented{}
}

/*WeaviateToolsMapNotImplemented handles this case with default header values.

Not (yet) implemented.
*/
type WeaviateToolsMapNotImplemented struct {
}

func (o *WeaviateToolsMapNotImplemented) Error() string {
	return fmt.Sprintf("[POST /tools/map][%d] weaviateToolsMapNotImplemented ", 501)
}

func (o *WeaviateToolsMapNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
