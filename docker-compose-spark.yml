# With this compose file you'll be able to start a development version of Weaviate,
# including it's backing database, contextionary, and demo data set.
#
# Usage:
#   $ docker-compose -f docker-compose.yml up
#
# It will be finished when the output of
#   $ docker-compose -f docker-compose.yml ps
#
#   mentions that the importer has existed with status 0,
#   as is shown in the example output below
#
#                  Name                             Command               State                                   Ports
#    --------------------------------------------------------------------------------------------------------------------------------------------------
#    weaviate_db_1                       /docker-entrypoint.py            Up       0.0.0.0:10000->10000/tcp, 0.0.0.0:7000->7000/tcp,
#                                                                                  0.0.0.0:7001->7001/tcp, 0.0.0.0:7199->7199/tcp,
#                                                                                  0.0.0.0:9042->9042/tcp, 0.0.0.0:9100->9100/tcp,
#                                                                                  0.0.0.0:9160->9160/tcp, 0.0.0.0:9180->9180/tcp
#    weaviate_index_1                    /docker-entrypoint.sh elas ...   Up       0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp
#    weaviate_janus_1                    /bin/bash -e /workspace/ja ...   Up       0.0.0.0:8182->8182/tcp, 0.0.0.0:8184->8184/tcp
#    weaviate_weaviate_1                 /bin/weaviate --host 0.0.0 ...   Up
#    weaviate_weaviate_demo_importer_1   ./tools/dev/import_demo_da ...   Exit 0
#
#
# NOTE:
#   If you abort the janusstack hard (not a clean shutdown), it won't come up again;
#   destroy the containers and retry.
version: '3.4'
services:
  weaviate:
    image: weaviate/dev-server
    command: 
      - "--host"
      - "${HOST:-0.0.0.0}"
      - "--port"
      - "${PORT:-8080}"
      - "--scheme"
      - "${SCHEME:-http}"
      - "--config-file"
      - "./weaviate.conf.yaml"
      - "--config"
      - "janusgraph_docker"
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    depends_on:
      - janus
    restart: on-failure:0
    ports:
      - "8080:8080"
  weaviate_demo_importer:
    image: weaviate/demo_importer
    command: ["-weaviate-url", "http://weaviate:8080/weaviate/v1/"]
    build:
      context: .
      dockerfile: Dockerfile
      target: data_importer
    depends_on:
      - weaviate
    restart: on-failure:0
  genesis_fake:
    build:
      context: .
      dockerfile: Dockerfile
      target: genesis_fake
    restart: on-failure:0
    ports:
      - "8090:8090"
  weaviate_b_fake:
    build:
      context: ./graphqlapi/prototype
      dockerfile: Dockerfile
    restart: on-failure:0
    ports:
      - "8081:8081"
  janus:
    image: creativesoftwarefdn/janusgraph-docker:0.3.1
    depends_on:
      - db
      - index
    ports:
     - "8182:8182"
     - "8184:8184"
    environment:
     - DEV_MODE=true
    volumes:
      - ./database/connectors/janusgraph/janusgraph.properties:/janusgraph-config/janusgraph.properties
      - ./database/connectors/janusgraph/gremlin-server.yaml:/janusgraph-config/gremlin-server.yaml
  db:
    image: scylladb/scylla:2.0.1
    ports:
     # http://docs.scylladb.com/kb/posix/
     # REST API
     - "10000:10000"
     # CQL ports (native_transport_port)
     - "9042:9042"
     # Thrift (rpc_port)
     - "9160:9160"
     # Internode
     - "7000:7000"
     - "7001:7001"
     # JMX
     - "7199:7199"
     # Prometheus monitoring
     - "9180:9180"
     - "9100:9100"
    volumes:
     - ./data/scylla/data:/var/lib/scylla
  index:
    image: elasticsearch:5
    ports:
     - "9200:9200"
     - "9300:9300"
    environment:
     - ES_JAVA_OPTS=-Xms500m -Xmx500m
    volumes:
     - ./data/elasticsearch/data:/usr/share/elasticsearch/data
  etcd:
    image: gcr.io/etcd-development/etcd:v3.3.8
    ports:
      - "2379:2379"
    entrypoint: /usr/local/bin/etcd
    command: 
      - "--name"
      - "s1"
      - "--data-dir"
      - "/etcd-data"
      - "--listen-client-urls"
      - "http://0.0.0.0:2379"
      - "--advertise-client-urls"
      - "http://0.0.0.0:2379"
      - "--listen-peer-urls"
      - "http://0.0.0.0:2380"
      - "--initial-advertise-peer-urls"
      - "http://0.0.0.0:2380"
      - "--initial-cluster"
      - "s1=http://0.0.0.0:2380"
      - "--initial-cluster-token"
      - "tkn"
      - "--initial-cluster-state"
      - "new"
  analytics-api:
    image: semi-technologies/janus-spark-analytics:latest
    ports:
      - "8100:8080"
  spark-master:
    image: creativesoftwarefdn/spark-janusgraph-master:2.2.2-janus-0.3.1
  spark-worker:
    image: creativesoftwarefdn/spark-janusgraph-worker:2.2.2-janus-0.3.1
    environment:
      SPARK_MASTER: "spark://spark-master:7077"
    depends_on:
      - spark-master
